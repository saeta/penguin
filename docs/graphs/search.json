{"Extensions/Empty.html#/s:13PenguinGraphs5mergeyyXecXeF":{"name":"merge(_:)","abstract":"<p>Logically merges <code>self</code> with <code>other</code>; this operation is a no-op.</p>","parent_name":"Empty"},"Other%20Extensions.html#/s:Si":{"name":"Int"},"Other%20Extensions.html#/s:s5Int32V":{"name":"Int32"},"Other%20Extensions.html#/s:Sf":{"name":"Float"},"Other%20Extensions.html#/s:Sd":{"name":"Double"},"Extensions/Empty.html":{"name":"Empty"},"Structs/RectangularGridFilter.html#/s:13PenguinGraphs21RectangularGridFilterV10lowerBoundAA6Point2Vvp":{"name":"lowerBound","abstract":"<p>The point at the minimum valid location.</p>","parent_name":"RectangularGridFilter"},"Structs/RectangularGridFilter.html#/s:13PenguinGraphs21RectangularGridFilterV10upperBoundAA6Point2Vvp":{"name":"upperBound","abstract":"<p>The point at the maximum valid location.</p>","parent_name":"RectangularGridFilter"},"Structs/RectangularGridFilter.html#/s:13PenguinGraphs21RectangularGridFilterVyAcA6Point2V_AEtcfc":{"name":"init(_:_:)","abstract":"<p>Allows all points within the rectangle defined by <code>a</code> and <code>b</code>.</p>","parent_name":"RectangularGridFilter"},"Structs/RectangularGridFilter.html#/s:13PenguinGraphs21RectangularGridFilterV1x1yACSNySiG_AFtcfc":{"name":"init(x:y:)","abstract":"<p>Allows all points whose x and y coordinates fall within the specified ranges.</p>","parent_name":"RectangularGridFilter"},"Structs/RectangularGridFilter.html#/s:13PenguinGraphs21RectangularGridFilterV08isPartOfD0ySbAA6Point2VF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>vertex</code> should be considered part of the grid.</p>","parent_name":"RectangularGridFilter"},"Structs/RectangularGridFilter.html#/s:13PenguinGraphs21RectangularGridFilterV08isPartOfD0ySbAA0D4EdgeVF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>edge</code> should be considered part of the grid.</p>","parent_name":"RectangularGridFilter"},"Structs/ManhattenGridFilter.html#/s:13PenguinGraphs19ManhattenGridFilterVACycfc":{"name":"init()","abstract":"<p>Creates a ManhattenGridFilter</p>","parent_name":"ManhattenGridFilter"},"Structs/ManhattenGridFilter.html#/s:13PenguinGraphs19ManhattenGridFilterV08isPartOfD0ySbAA6Point2VF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>vertex</code> should be considered part of the grid.</p>","parent_name":"ManhattenGridFilter"},"Structs/ManhattenGridFilter.html#/s:13PenguinGraphs19ManhattenGridFilterV08isPartOfD0ySbAA0D4EdgeVF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>edge</code> should be considered part of the grid.</p>","parent_name":"ManhattenGridFilter"},"Structs/CompleteGridFilter.html#/s:13PenguinGraphs18CompleteGridFilterVACycfc":{"name":"init()","abstract":"<p>Creates a CompleteGridFilter</p>","parent_name":"CompleteGridFilter"},"Structs/CompleteGridFilter.html#/s:13PenguinGraphs18CompleteGridFilterV08isPartOfD0ySbAA6Point2VF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>vertex</code> should be considered part of the grid.</p>","parent_name":"CompleteGridFilter"},"Structs/CompleteGridFilter.html#/s:13PenguinGraphs18CompleteGridFilterV08isPartOfD0ySbAA0D4EdgeVF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>edge</code> should be considered part of the grid.</p>","parent_name":"CompleteGridFilter"},"Protocols/GridFilter.html#/s:13PenguinGraphs10GridFilterP08isPartOfC0ySbAA6Point2VF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>vertex</code> should be considered part of the grid.</p>","parent_name":"GridFilter"},"Protocols/GridFilter.html#/s:13PenguinGraphs10GridFilterP08isPartOfC0ySbAA0C4EdgeVF":{"name":"isPartOfGrid(_:)","abstract":"<p>Returns <code>true</code> iff <code>edge</code> should be considered part of the grid.</p>","parent_name":"GridFilter"},"Structs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV6sourceAA6Point2Vvp":{"name":"source","abstract":"<p>The source of the edge.</p>","parent_name":"GridEdge"},"Structs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV9directionAA0C9DirectionOvp":{"name":"direction","abstract":"<p>The direction of movement from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV6sourceAA6Point2Vvp\">source</a></code> to reach the destination.</p>","parent_name":"GridEdge"},"Structs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV6source9directionAcA6Point2V_AA0C9DirectionOtcfc":{"name":"init(source:direction:)","abstract":"<p>Creates the GridEdge from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV6sourceAA6Point2Vvp\">source</a></code> in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV9directionAA0C9DirectionOvp\">direction</a></code>.</p>","parent_name":"GridEdge"},"Structs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV11destinationAA6Point2Vvp":{"name":"destination","abstract":"<p>The destination of <code>self</code>.</p>","parent_name":"GridEdge"},"Structs/GridEdge.html#/s:13PenguinGraphs8GridEdgeV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Arbitrary, stable ordering of <code>Self</code>s.</p>","parent_name":"GridEdge"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO5northyA2CmF":{"name":"north","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO4eastyA2CmF":{"name":"east","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO5southyA2CmF":{"name":"south","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO4westyA2CmF":{"name":"west","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO9northEastyA2CmF":{"name":"northEast","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO9southEastyA2CmF":{"name":"southEast","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO9southWestyA2CmF":{"name":"southWest","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO9northWestyA2CmF":{"name":"northWest","abstract":"<p>Undocumented</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO10isCardinalSbvp":{"name":"isCardinal","abstract":"<p>true if <code>self</code> is a cardinal direction; false otherwise.</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO10isDiagonalSbvp":{"name":"isDiagonal","abstract":"<p>true iff <code>self</code> is a diagonal direction; false otherwise.</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO15coordinateDeltaAA6Point2Vvp":{"name":"coordinateDelta","abstract":"<p>A vector representing the direction of movement for a given direction.</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:13PenguinGraphs13GridDirectionO1sopyA2CFZ":{"name":"-(_:)","abstract":"<p>Returns the opposite direction of <code>rhs</code>.</p>","parent_name":"GridDirection"},"Enums/GridDirection.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"GridDirection"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V1xSivp":{"name":"x","abstract":"<p>The x coordinate of the point.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V1ySivp":{"name":"y","abstract":"<p>The y coordinate of the point.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V1x1yACSi_Sitcfc":{"name":"init(x:y:)","abstract":"<p>Creates a Point2 at the given location.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V9magnitudeSdvp":{"name":"magnitude","abstract":"<p>The Euclidean distance from the origin to <code>self</code>.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V17manhattenDistanceSivp":{"name":"manhattenDistance","abstract":"<p>The number of steps on the shortest path that excluding diagonals from the origin to <code>self</code>.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V2peoiyyACz_ACtFZ":{"name":"+=(_:_:)","abstract":"<p>Adds <code>rhs</code> into <code>lhs</code>.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Returns a new coordinate that is the vector sum of <code>lhs</code> and <code>rhs</code>.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Arbitrary ordering of points.</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V1sopyA2CFZ":{"name":"-(_:)","abstract":"<p>Returns a point that if added to <code>rhx</code> would yield the Point2(x: 0, y: 0).</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V2seoiyyACz_ACtFZ":{"name":"-=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V1soiyA2C_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Point2"},"Structs/Point2.html#/s:13PenguinGraphs6Point2V6originACvpZ":{"name":"origin","abstract":"<p>The point corresponding to (0, 0).</p>","parent_name":"Point2"},"Structs/Point2.html":{"name":"Point2","abstract":"<p>A point in 2 dimensional grid.</p>"},"Enums/GridDirection.html":{"name":"GridDirection","abstract":"<p>Available movement directions on the grid.</p>"},"Structs/GridEdge.html":{"name":"GridEdge","abstract":"<p>The name of an edge in <code>self</code>.</p>"},"Protocols/GridFilter.html":{"name":"GridFilter","abstract":"<p>Allows selective removing parts of an InfiniteGrid.</p>"},"Structs/CompleteGridFilter.html":{"name":"CompleteGridFilter","abstract":"<p>Performs no filtering on the complete grid, resulting in an infinite grid with no edges or"},"Structs/ManhattenGridFilter.html":{"name":"ManhattenGridFilter","abstract":"<p>Filters a grid to only allow the cardinal dimensions.</p>"},"Structs/RectangularGridFilter.html":{"name":"RectangularGridFilter","abstract":"<p>Bounds an infinite grid to a finite, fixed rectangle.</p>"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV7Storagea":{"name":"Storage","abstract":"<p>The datastructure containing the graph&rsquo;s information.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV8VertexIda":{"name":"VertexId","abstract":"<p>Name for a Vertex.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV6EdgeIda":{"name":"EdgeId","abstract":"<p>Name for an edge.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV4Edgea":{"name":"Edge","abstract":"<p>Arbitrary associated data for every edge.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV6Vertexa":{"name":"Vertex","abstract":"<p>Arbitrary data associated with every vertex.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV20VertexEdgeCollectiona":{"name":"VertexEdgeCollection","abstract":"<p>All edge identifiers for a given vertex.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV5edges4fromAA01_de1_C20VertexEdgeCollectionVy0K4DataQzGAH_0J2IdQZ_tF":{"name":"edges(from:)","abstract":"<p>Returns a collection of all edges from <code>vertex</code>.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV9outDegree2ofSi8EdgeData_8VertexIdQZ_tF":{"name":"outDegree(of:)","abstract":"<p>Returns the number of edges whose source is <code>vertex</code>.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV6source2of8EdgeData_8VertexIdQZAA01_de1_cjM0VyAHG_tF":{"name":"source(of:)","abstract":"<p>Returns a handle to the source of <code>edge</code>.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV11destination2of8EdgeData_8VertexIdQZAA01_de1_cjM0VyAHG_tF":{"name":"destination(of:)","abstract":"<p>Returns a handle to the destination of <code>edge</code>.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV6vertex6VertexQz8EdgeData_0I2IdQZ_tcip":{"name":"subscript(vertex:)","abstract":"<p>Access information associated with <code>vertex</code>.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_DirectedAdjacencyList_ParallelProjection.html#/s:13PenguinGraphs41_DirectedAdjacencyList_ParallelProjectionV4edge8EdgeData_0I0QZAA01_de1_cI2IdVyAE_06VertexK0QZG_tcip":{"name":"subscript(edge:)","abstract":"<p>Access information associated <code>edge</code>.</p>","parent_name":"_DirectedAdjacencyList_ParallelProjection"},"Structs/_AdjacencyList_UndirectedVertexEdgeCollection.html#/s:13PenguinGraphs45_AdjacencyList_UndirectedVertexEdgeCollectionV0F2Ida":{"name":"VertexId","abstract":"<p>An identifier for a vertex.</p>","parent_name":"_AdjacencyList_UndirectedVertexEdgeCollection"},"Structs/_AdjacencyList_UndirectedVertexEdgeCollection.html#/s:13PenguinGraphs45_AdjacencyList_UndirectedVertexEdgeCollectionV0G2Ida":{"name":"EdgeId","abstract":"<p>An identifier for an edge.</p>","parent_name":"_AdjacencyList_UndirectedVertexEdgeCollection"},"Structs/_AdjacencyList_UndirectedVertexEdgeCollection.html#/s:13PenguinGraphs45_AdjacencyList_UndirectedVertexEdgeCollectionV10startIndexSivp":{"name":"startIndex","abstract":"<p>The position of the first element in a nonempty collection.</p>","parent_name":"_AdjacencyList_UndirectedVertexEdgeCollection"},"Structs/_AdjacencyList_UndirectedVertexEdgeCollection.html#/s:13PenguinGraphs45_AdjacencyList_UndirectedVertexEdgeCollectionV8endIndexSivp":{"name":"endIndex","abstract":"<p>The collection&rsquo;s &ldquo;past the end&rdquo; position.</p>","parent_name":"_AdjacencyList_UndirectedVertexEdgeCollection"},"Structs/_AdjacencyList_UndirectedVertexEdgeCollection.html#/s:13PenguinGraphs45_AdjacencyList_UndirectedVertexEdgeCollectionV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Returns the position immediately after the given index.</p>","parent_name":"_AdjacencyList_UndirectedVertexEdgeCollection"},"Structs/_AdjacencyList_UndirectedVertexEdgeCollection.html#/s:13PenguinGraphs45_AdjacencyList_UndirectedVertexEdgeCollectionVyAA01_cd1_eG2IdVy0fI0QzGSicip":{"name":"subscript(_:)","abstract":"<p>Accesses the EdgeId at <code>index</code>.</p>","parent_name":"_AdjacencyList_UndirectedVertexEdgeCollection"},"Structs/_AdjacencyList_UndirectedPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP4data0F0Qzvp":{"name":"data","parent_name":"_AdjacencyList_UndirectedPerVertex"},"Structs/_AdjacencyList_UndirectedPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP5edgesSay8EdgeDataQzGvp":{"name":"edges","parent_name":"_AdjacencyList_UndirectedPerVertex"},"Structs/_AdjacencyList_UndirectedPerVertex.html#/s:13PenguinGraphs34_AdjacencyList_UndirectedPerVertexV13reversedEdgesSayAA01_cd1_E6EdgeIdVy0gK0Qy_GGvp":{"name":"reversedEdges","abstract":"<p>Undocumented</p>","parent_name":"_AdjacencyList_UndirectedPerVertex"},"Structs/_AdjacencyList_UndirectedPerVertex.html#/s:13PenguinGraphs34_AdjacencyList_UndirectedPerVertexVACyxq_Gycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"_AdjacencyList_UndirectedPerVertex"},"Structs/_AdjacencyList_UndirectedPerVertex.html#/s:13PenguinGraphs34_AdjacencyList_UndirectedPerVertexV4dataACyxq_Gx_tcfc":{"name":"init(data:)","abstract":"<p>Undocumented</p>","parent_name":"_AdjacencyList_UndirectedPerVertex"},"Structs/_AdjacencyList_UndirectedEdgeId.html#/s:13PenguinGraphs31_AdjacencyList_UndirectedEdgeIdV06VertexG0a":{"name":"VertexId","abstract":"<p>An identifier for a vertex.</p>","parent_name":"_AdjacencyList_UndirectedEdgeId"},"Structs/_AdjacencyList_UndirectedEdgeId.html#/s:13PenguinGraphs31_AdjacencyList_UndirectedEdgeIdV2eeoiySbACyxG_AEtFZ":{"name":"==(_:_:)","abstract":"<p>Equality. (Ignores <code>reversed</code>.)</p>","parent_name":"_AdjacencyList_UndirectedEdgeId"},"Structs/_AdjacencyList_UndirectedEdgeId.html#/s:13PenguinGraphs31_AdjacencyList_UndirectedEdgeIdV1loiySbACyxG_AEtFZ":{"name":"<(_:_:)","abstract":"<p>Returns true if <code>lhs</code> should be ordered before <code>rhs</code>.</p>","parent_name":"_AdjacencyList_UndirectedEdgeId"},"Structs/_AdjacencyList_UndirectedEdgeId.html#/s:13PenguinGraphs31_AdjacencyList_UndirectedEdgeIdV4hash4intoys6HasherVz_tF":{"name":"hash(into:)","abstract":"<p>Hash function. (Ignores <code>reversed</code>.)</p>","parent_name":"_AdjacencyList_UndirectedEdgeId"},"Structs/_AdjacencyList_UndirectedEdgeCollection/Index.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionV5IndexV1loiySbAEyx_G_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Returns true if <code>lhs</code> should be ordered before <code>rhs</code>.</p>","parent_name":"Index"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionV8VertexIda":{"name":"VertexId","abstract":"<p>The index corresponding to a vertex.</p>","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionV5RawIda":{"name":"RawId","abstract":"<p>The (optionally compressed) binary representation of an index into an <code>AdjacencyList</code>&lsquo;s data","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionV0F2Ida":{"name":"EdgeId","abstract":"<p>A name for an edge.</p>","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_UndirectedEdgeCollection/Index.html":{"name":"Index","abstract":"<p>A handle for an element in <code>self</code>.</p>","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionV10startIndexAC0I0Vyx_Gvp":{"name":"startIndex","abstract":"<p>The index into <code>self</code> associated with the first valid edge.</p>","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionV8endIndexAC0I0Vyx_Gvp":{"name":"endIndex","abstract":"<p>A index identifying &ldquo;one-past-the-end&rdquo; of <code>self</code>.</p>","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionVyAA01_cd1_eF2IdVy7Element_0F4Data06VertexH0QZGAC5IndexVyx_Gcip":{"name":"subscript(_:)","abstract":"<p>Returns the edge identifier corresponding to the provided index.</p>","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html#/s:13PenguinGraphs39_AdjacencyList_UndirectedEdgeCollectionV5index5afterAC5IndexVyx_GAH_tF":{"name":"index(after:)","abstract":"<p>Returns the position immediately after the given index.</p>","parent_name":"_AdjacencyList_UndirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedVertexEdgeCollection.html#/s:13PenguinGraphs43_AdjacencyList_DirectedVertexEdgeCollectionV0F2Ida":{"name":"VertexId","abstract":"<p>An identifier for a vertex.</p>","parent_name":"_AdjacencyList_DirectedVertexEdgeCollection"},"Structs/_AdjacencyList_DirectedVertexEdgeCollection.html#/s:13PenguinGraphs43_AdjacencyList_DirectedVertexEdgeCollectionV0G2Ida":{"name":"EdgeId","abstract":"<p>An identifier for an edge.</p>","parent_name":"_AdjacencyList_DirectedVertexEdgeCollection"},"Structs/_AdjacencyList_DirectedVertexEdgeCollection.html#/s:13PenguinGraphs43_AdjacencyList_DirectedVertexEdgeCollectionV10startIndexSivp":{"name":"startIndex","abstract":"<p>The position of the first element in a nonempty collection.</p>","parent_name":"_AdjacencyList_DirectedVertexEdgeCollection"},"Structs/_AdjacencyList_DirectedVertexEdgeCollection.html#/s:13PenguinGraphs43_AdjacencyList_DirectedVertexEdgeCollectionV8endIndexSivp":{"name":"endIndex","abstract":"<p>The collection&rsquo;s &ldquo;past the end&rdquo; position.</p>","parent_name":"_AdjacencyList_DirectedVertexEdgeCollection"},"Structs/_AdjacencyList_DirectedVertexEdgeCollection.html#/s:13PenguinGraphs43_AdjacencyList_DirectedVertexEdgeCollectionV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Returns the position immediately after the given index.</p>","parent_name":"_AdjacencyList_DirectedVertexEdgeCollection"},"Structs/_AdjacencyList_DirectedVertexEdgeCollection.html#/s:13PenguinGraphs43_AdjacencyList_DirectedVertexEdgeCollectionVyAA01_cd1_eG2IdVy0fI0QzGSicip":{"name":"subscript(_:)","abstract":"<p>Accesses the EdgeId at <code>index</code>.</p>","parent_name":"_AdjacencyList_DirectedVertexEdgeCollection"},"Structs/_AdjacencyList_DirectedPerVertex.html#/s:13PenguinGraphs32_AdjacencyList_DirectedPerVertexV4dataxvp":{"name":"data","abstract":"<p>Arbitrary user-supplied data associated with the vertex.</p>","parent_name":"_AdjacencyList_DirectedPerVertex"},"Structs/_AdjacencyList_DirectedPerVertex.html#/s:13PenguinGraphs32_AdjacencyList_DirectedPerVertexV5edgesSayq_Gvp":{"name":"edges","abstract":"<p>Edge-related data including at minimum information of every edge whose origin is this vertex.</p>","parent_name":"_AdjacencyList_DirectedPerVertex"},"Structs/_AdjacencyList_DirectedPerVertex.html#/s:13PenguinGraphs32_AdjacencyList_DirectedPerVertexVACyxq_Gycfc":{"name":"init()","abstract":"<p>Default-initializes <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/_AdjacencyList_DirectedPerVertex.html#/s:13PenguinGraphs32_AdjacencyList_DirectedPerVertexV4dataxvp\">data</a></code> and an empty <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/_AdjacencyList_DirectedPerVertex.html#/s:13PenguinGraphs32_AdjacencyList_DirectedPerVertexV5edgesSayq_Gvp\">edges</a></code> array.</p>","parent_name":"_AdjacencyList_DirectedPerVertex"},"Structs/_AdjacencyList_DirectedPerVertex.html#/s:13PenguinGraphs32_AdjacencyList_DirectedPerVertexV4dataACyxq_Gx_tcfc":{"name":"init(data:)","abstract":"<p>Creates a per-vertex, storing <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/_AdjacencyList_DirectedPerVertex.html#/s:13PenguinGraphs32_AdjacencyList_DirectedPerVertexV4dataxvp\">data</a></code>.</p>","parent_name":"_AdjacencyList_DirectedPerVertex"},"Structs/_AdjacencyList_DirectedPerEdge.html#/s:13PenguinGraphs30_AdjacencyList_DirectedPerEdgeV11destinationxvp":{"name":"destination","abstract":"<p>The destination of the edge. (The location of this struct in the larger data structure","parent_name":"_AdjacencyList_DirectedPerEdge"},"Structs/_AdjacencyList_DirectedPerEdge.html#/s:13PenguinGraphs30_AdjacencyList_DirectedPerEdgeV4dataq_vp":{"name":"data","abstract":"<p>Arbitrary user-supplied data associated with the edge.</p>","parent_name":"_AdjacencyList_DirectedPerEdge"},"Structs/_AdjacencyList_DirectedPerEdge.html#/s:13PenguinGraphs30_AdjacencyList_DirectedPerEdgeV11destinationACyxq_Gx_tcfc":{"name":"init(destination:)","abstract":"<p>Creates self with default-initialized <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/_AdjacencyList_DirectedPerEdge.html#/s:13PenguinGraphs30_AdjacencyList_DirectedPerEdgeV4dataq_vp\">data</a></code>.</p>","parent_name":"_AdjacencyList_DirectedPerEdge"},"Structs/_AdjacencyList_DirectedPerEdge.html#/s:13PenguinGraphs30_AdjacencyList_DirectedPerEdgeV11destination4dataACyxq_Gx_q_tcfc":{"name":"init(destination:data:)","abstract":"<p>Creates <code>self</code>.</p>","parent_name":"_AdjacencyList_DirectedPerEdge"},"Structs/_AdjacencyList_DirectedEdgeId.html#/s:13PenguinGraphs29_AdjacencyList_DirectedEdgeIdV06VertexG0a":{"name":"VertexId","abstract":"<p>An identifier for a vertex.</p>","parent_name":"_AdjacencyList_DirectedEdgeId"},"Structs/_AdjacencyList_DirectedEdgeId.html#/s:13PenguinGraphs29_AdjacencyList_DirectedEdgeIdV1loiySbACyxG_AEtFZ":{"name":"<(_:_:)","abstract":"<p>Returns true if <code>lhs</code> should be ordered before <code>rhs</code>.</p>","parent_name":"_AdjacencyList_DirectedEdgeId"},"Structs/_AdjacencyList_DirectedEdgeId.html#/s:13PenguinGraphs29_AdjacencyList_DirectedEdgeIdV11descriptionSSvp":{"name":"description","abstract":"<p>Pretty representation of an edge identifier.</p>","parent_name":"_AdjacencyList_DirectedEdgeId"},"Structs/_AdjacencyList_DirectedEdgeCollection/Index.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionV5IndexV1loiySbAEyx_G_AGtFZ":{"name":"<(_:_:)","abstract":"<p>Returns true if <code>lhs</code> should be ordered before <code>rhs</code>.</p>","parent_name":"Index"},"Structs/_AdjacencyList_DirectedEdgeCollection.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionV8VertexIda":{"name":"VertexId","abstract":"<p>The index corresponding to a vertex.</p>","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedEdgeCollection.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionV5RawIda":{"name":"RawId","abstract":"<p>The (optionally compressed) binary representation of an index into an <code>AdjacencyList</code>&lsquo;s data","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedEdgeCollection.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionV0F2Ida":{"name":"EdgeId","abstract":"<p>A name for an edge.</p>","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedEdgeCollection/Index.html":{"name":"Index","abstract":"<p>A handle for an element in <code>self</code>.</p>","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedEdgeCollection.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionV10startIndexAC0I0Vyx_Gvp":{"name":"startIndex","abstract":"<p>The index into <code>self</code> associated with the first valid edge.</p>","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedEdgeCollection.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionV8endIndexAC0I0Vyx_Gvp":{"name":"endIndex","abstract":"<p>A index identifying &ldquo;one-past-the-end&rdquo; of <code>self</code>.</p>","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedEdgeCollection.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionVyAA01_cd1_eF2IdVy7Element_0F4Data06VertexH0QZGAC5IndexVyx_Gcip":{"name":"subscript(_:)","abstract":"<p>Returns the edge identifier corresponding to the provided index.</p>","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_DirectedEdgeCollection.html#/s:13PenguinGraphs37_AdjacencyList_DirectedEdgeCollectionV5index5afterAC5IndexVyx_GAH_tF":{"name":"index(after:)","abstract":"<p>Returns the position immediately after the given index.</p>","parent_name":"_AdjacencyList_DirectedEdgeCollection"},"Structs/_AdjacencyList_BidirectionalPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP4data0F0Qzvp":{"name":"data","parent_name":"_AdjacencyList_BidirectionalPerVertex"},"Structs/_AdjacencyList_BidirectionalPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP5edgesSay8EdgeDataQzGvp":{"name":"edges","parent_name":"_AdjacencyList_BidirectionalPerVertex"},"Structs/_AdjacencyList_BidirectionalPerVertex.html#/s:13PenguinGraphs36_AdjacencyListPerVertexBidirectionalP13incomingEdgesSayAA01_cD15_DirectedEdgeIdVy0K4Data_0fL0QZGGvp":{"name":"incomingEdges","parent_name":"_AdjacencyList_BidirectionalPerVertex"},"Structs/_AdjacencyList_BidirectionalPerVertex.html#/s:13PenguinGraphs37_AdjacencyList_BidirectionalPerVertexVACyxq_Gycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"_AdjacencyList_BidirectionalPerVertex"},"Structs/_AdjacencyList_BidirectionalPerVertex.html#/s:13PenguinGraphs37_AdjacencyList_BidirectionalPerVertexV4dataACyxq_Gx_tcfc":{"name":"init(data:)","abstract":"<p>Undocumented</p>","parent_name":"_AdjacencyList_BidirectionalPerVertex"},"Structs/_AdjacencyList_BidirectionalPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP8VertexIdQa":{"name":"VertexId","parent_name":"_AdjacencyList_BidirectionalPerEdge"},"Structs/_AdjacencyList_BidirectionalPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP11destination8VertexIdQzvp":{"name":"destination","parent_name":"_AdjacencyList_BidirectionalPerEdge"},"Structs/_AdjacencyList_BidirectionalPerEdge.html#/s:13PenguinGraphs34_AdjacencyListPerEdgeBidirectionalP13reverseOffset8VertexIdQzvp":{"name":"reverseOffset","parent_name":"_AdjacencyList_BidirectionalPerEdge"},"Structs/_AdjacencyList_BidirectionalPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP4data0F0Qzvp":{"name":"data","parent_name":"_AdjacencyList_BidirectionalPerEdge"},"Structs/_AdjacencyList_BidirectionalPerEdge.html#/s:13PenguinGraphs35_AdjacencyList_BidirectionalPerEdgeV11destination13reverseOffsetACyxq_Gx_xtcfc":{"name":"init(destination:reverseOffset:)","abstract":"<p>Creates a per-edge, storing a reference to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/_AdjacencyList_BidirectionalPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP11destination8VertexIdQzvp\">destination</a></code> and a pointer to the reverse edge (","parent_name":"_AdjacencyList_BidirectionalPerEdge"},"Structs/_AdjacencyList_BidirectionalPerEdge.html#/s:13PenguinGraphs35_AdjacencyList_BidirectionalPerEdgeV11destination13reverseOffset4dataACyxq_Gx_xq_tcfc":{"name":"init(destination:reverseOffset:data:)","abstract":"<p>Initializes <code>self</code>.</p>","parent_name":"_AdjacencyList_BidirectionalPerEdge"},"Protocols/_AdjacencyListPerVertexUndirected.html#/s:13PenguinGraphs33_AdjacencyListPerVertexUndirectedP5RawIda":{"name":"RawId","abstract":"<p>The RawId&rsquo;s used throughout <code>self</code>.</p>","parent_name":"_AdjacencyListPerVertexUndirected"},"Protocols/_AdjacencyListPerVertexUndirected.html#/s:13PenguinGraphs33_AdjacencyListPerVertexUndirectedP6EdgeIda":{"name":"EdgeId","abstract":"<p>The identifier for an edge in a graph.</p>","parent_name":"_AdjacencyListPerVertexUndirected"},"Protocols/_AdjacencyListPerVertexUndirected.html#/s:13PenguinGraphs33_AdjacencyListPerVertexUndirectedP13reversedEdgesSayAA01_cd1_G6EdgeIdVy0J4Data_0fK0QZGGvp":{"name":"reversedEdges","abstract":"<p>Undocumented</p>","parent_name":"_AdjacencyListPerVertexUndirected"},"Protocols/_AdjacencyListPerVertexBidirectional.html#/s:13PenguinGraphs36_AdjacencyListPerVertexBidirectionalP5RawIda":{"name":"RawId","abstract":"<p>The RawId&rsquo;s used throughout <code>self</code>.</p>","parent_name":"_AdjacencyListPerVertexBidirectional"},"Protocols/_AdjacencyListPerVertexBidirectional.html#/s:13PenguinGraphs36_AdjacencyListPerVertexBidirectionalP6EdgeIda":{"name":"EdgeId","abstract":"<p>The identifier for an edge.</p>","parent_name":"_AdjacencyListPerVertexBidirectional"},"Protocols/_AdjacencyListPerVertexBidirectional.html#/s:13PenguinGraphs36_AdjacencyListPerVertexBidirectionalP13incomingEdgesSayAA01_cD15_DirectedEdgeIdVy0K4Data_0fL0QZGGvp":{"name":"incomingEdges","abstract":"<p>The coordinates of edges incoming to this vertex.</p>","parent_name":"_AdjacencyListPerVertexBidirectional"},"Protocols/_AdjacencyListPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP0F0Qa":{"name":"Vertex","abstract":"<p>Arbitrary, user-supplied data associated with each vertex.</p>","parent_name":"_AdjacencyListPerVertex"},"Protocols/_AdjacencyListPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP8EdgeDataQa":{"name":"EdgeData","abstract":"<p>Collection of information regarding edges originating from this logical node.</p>","parent_name":"_AdjacencyListPerVertex"},"Protocols/_AdjacencyListPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP4data0F0Qzvp":{"name":"data","abstract":"<p>The arbitrary, user-supplied data associated with the vertex represented by <code>self</code>.</p>","parent_name":"_AdjacencyListPerVertex"},"Protocols/_AdjacencyListPerVertex.html#/s:13PenguinGraphs23_AdjacencyListPerVertexP5edgesSay8EdgeDataQzGvp":{"name":"edges","abstract":"<p>The collection of edges starting from the vertex represented by <code>self</code>.</p>","parent_name":"_AdjacencyListPerVertex"},"Protocols/_AdjacencyListPerEdgeBidirectional.html#/s:13PenguinGraphs34_AdjacencyListPerEdgeBidirectionalP5RawIda":{"name":"RawId","abstract":"<p>The compressed form of a vertex identifier used in the adjacency list.</p>","parent_name":"_AdjacencyListPerEdgeBidirectional"},"Protocols/_AdjacencyListPerEdgeBidirectional.html#/s:13PenguinGraphs34_AdjacencyListPerEdgeBidirectionalP13reverseOffset8VertexIdQzvp":{"name":"reverseOffset","abstract":"<p>The offset in the forward vertex&rsquo;s edge collection.</p>","parent_name":"_AdjacencyListPerEdgeBidirectional"},"Protocols/_AdjacencyListPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP8VertexIdQa":{"name":"VertexId","abstract":"<p>Identifier for a vertex in a graph.</p>","parent_name":"_AdjacencyListPerEdge"},"Protocols/_AdjacencyListPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP0F0Qa":{"name":"Edge","abstract":"<p>Arbitrary, user-supplied data associated with each edge.</p>","parent_name":"_AdjacencyListPerEdge"},"Protocols/_AdjacencyListPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP11destination8VertexIdQzvp":{"name":"destination","abstract":"<p>The destination vertex of the edge represented by <code>self</code>.</p>","parent_name":"_AdjacencyListPerEdge"},"Protocols/_AdjacencyListPerEdge.html#/s:13PenguinGraphs21_AdjacencyListPerEdgeP4data0F0Qzvp":{"name":"data","abstract":"<p>The user-supplied arbitrary data associated with the edge represented by <code>self</code>.</p>","parent_name":"_AdjacencyListPerEdge"},"Protocols/UndirectedAdjacencyListProtocol.html#/s:13PenguinGraphs31UndirectedAdjacencyListProtocolPAAE9edgeCountSivp":{"name":"edgeCount","abstract":"<p>The total number of edges within the graph.</p>","parent_name":"UndirectedAdjacencyListProtocol"},"Protocols/UndirectedAdjacencyListProtocol.html#/s:13PenguinGraphs31UndirectedAdjacencyListProtocolPAAE5edgesAA01_de1_C14EdgeCollectionVySay11_VertexDataQzGGvp":{"name":"edges","abstract":"<p>A collection of all edges in <code>self</code>.</p>","parent_name":"UndirectedAdjacencyListProtocol"},"Protocols/UndirectedAdjacencyListProtocol.html#/s:13PenguinGraphs31UndirectedAdjacencyListProtocolPAAE6source2of5RawIdQzAA01_de1_c4EdgeJ0VyAGG_tF":{"name":"source(of:)","abstract":"<p>Returns the source vertex of <code>edge</code>.</p>","parent_name":"UndirectedAdjacencyListProtocol"},"Protocols/UndirectedAdjacencyListProtocol.html#/s:13PenguinGraphs31UndirectedAdjacencyListProtocolPAAE11destination2of5RawIdQzAA01_de1_c4EdgeJ0VyAGG_tF":{"name":"destination(of:)","abstract":"<p>Returns the destination vertex of <code>edge</code>.</p>","parent_name":"UndirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs29DirectedAdjacencyListProtocolPAAE9edgeCountSivp":{"name":"edgeCount","abstract":"<p>The total number of edges within the graph.</p>","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs29DirectedAdjacencyListProtocolPAAE5edgesAA01_de1_C14EdgeCollectionVySay11_VertexDataQzGGvp":{"name":"edges","abstract":"<p>A collection of all edges in <code>self</code>.</p>","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs29DirectedAdjacencyListProtocolPAAE6source2of5RawIdQzAA01_de1_c4EdgeJ0VyAGG_tF":{"name":"source(of:)","abstract":"<p>Returns the source vertex of <code>edge</code>.</p>","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs29DirectedAdjacencyListProtocolPAAE11destination2of5RawIdQzAA01_de1_c4EdgeJ0VyAGG_tF":{"name":"destination(of:)","abstract":"<p>Returns the destination vertex of <code>edge</code>.</p>","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs13ParallelGraphP4step9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA0cD16AlgorithmContextVy0C10ProjectionQz7Mailbox_7MessageQYd__qd_0_ALQyd__Gz_6VertexQzztKXEtKAA17MailboxesProtocolRd__AA09MergeableM0Rd_0_AL_0D0QYd__AKRSr0_lF":{"name":"step(mailboxes:globalState:_:)","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs29DirectedAdjacencyListProtocolPAAE12parallelStep9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA29ParallelGraphAlgorithmContextVyAA01_cde1_L10ProjectionVy11_VertexDataQzG7Mailbox_7MessageQYd__qd_0_AOQyd__Gz_0Q0QzztKXEtKAA09MailboxesF0Rd__AA09MergeableT0Rd_0_AnO_0M0RTd__r0_lF":{"name":"parallelStep(mailboxes:globalState:_:)","abstract":"<p>Executes <code>fn</code> in parallel across all vertices, using <code>mailboxes</code> and <code>globalState</code>; returns","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs29DirectedAdjacencyListProtocolPAAE14sequentialStep9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA29ParallelGraphAlgorithmContextVyAA01_cde1_L10ProjectionVy11_VertexDataQzG7Mailbox_7MessageQYd__qd_0_AOQyd__Gz_0Q0QzztKXEtKAA09MailboxesF0Rd__AA09MergeableT0Rd_0_AnO_0M0RTd__r0_lF":{"name":"sequentialStep(mailboxes:globalState:_:)","abstract":"<p>Executes <code>fn</code> across all vertices using only a single thread, using <code>mailboxes</code> and","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/DirectedAdjacencyListProtocol.html#/s:13PenguinGraphs29DirectedAdjacencyListProtocolPAAE14sequentialStepyyqd__z_XetKcxzAaBRzAA09MailboxesF0Rd__AA01_cdE19_ParallelProjectionVy11_VertexDataQzG7Mailbox_5GraphRTd__r__lF":{"name":"sequentialStep(mailboxes:_:)","abstract":"<p>Executes <code>fn</code> across all vertices using only a single thread using <code>mailboxes</code>.</p>","parent_name":"DirectedAdjacencyListProtocol"},"Protocols/AdjacencyListProtocol.html#/s:13PenguinGraphs21AdjacencyListProtocolP5RawIdQa":{"name":"RawId","abstract":"<p>Storage for indices into arrays within <code>self</code>.</p>","parent_name":"AdjacencyListProtocol"},"Protocols/AdjacencyListProtocol.html#/s:13PenguinGraphs21AdjacencyListProtocolP9_EdgeDataQa":{"name":"_EdgeData","abstract":"<p>Storage associated with each edge in <code>self</code>.</p>","parent_name":"AdjacencyListProtocol"},"Protocols/AdjacencyListProtocol.html#/s:13PenguinGraphs21AdjacencyListProtocolP11_VertexDataQa":{"name":"_VertexData","abstract":"<p>Storage associated with each vertex in <code>self</code>.</p>","parent_name":"AdjacencyListProtocol"},"Protocols/AdjacencyListProtocol.html#/s:13PenguinGraphs21AdjacencyListProtocolP8_Storagea":{"name":"_Storage","abstract":"<p>The data structure containing all of the information in <code>self</code>.</p>","parent_name":"AdjacencyListProtocol"},"Protocols/AdjacencyListProtocol.html#/s:13PenguinGraphs21AdjacencyListProtocolP8_storageSay11_VertexDataQzGvp":{"name":"_storage","abstract":"<p>The data structure containing all of the information in <code>self</code>.</p>","parent_name":"AdjacencyListProtocol"},"Protocols/AdjacencyListProtocol.html#/s:13PenguinGraphs21AdjacencyListProtocolPAAE11vertexCountSivp":{"name":"vertexCount","abstract":"<p>The total number of vertices in the graph.</p>","parent_name":"AdjacencyListProtocol"},"Protocols/AdjacencyListProtocol.html":{"name":"AdjacencyListProtocol","abstract":"<p>A general purpose <a href=\"https://en.wikipedia.org/wiki/Adjacency_list\">adjacency list</a> graph.</p>"},"Protocols/DirectedAdjacencyListProtocol.html":{"name":"DirectedAdjacencyListProtocol","abstract":"<p>Adjacency lists whose edges are directed.</p>"},"Protocols/UndirectedAdjacencyListProtocol.html":{"name":"UndirectedAdjacencyListProtocol","abstract":"<p>Undocumented</p>"},"Protocols/_AdjacencyListPerEdge.html":{"name":"_AdjacencyListPerEdge","abstract":"<p>Data associated with each edge in an <code>AdjacencyList</code>.</p>"},"Protocols/_AdjacencyListPerEdgeBidirectional.html":{"name":"_AdjacencyListPerEdgeBidirectional","abstract":"<p>Augments <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_AdjacencyListPerEdge.html\">_AdjacencyListPerEdge</a></code> by adding reverse-edge information.</p>"},"Protocols/_AdjacencyListPerVertex.html":{"name":"_AdjacencyListPerVertex","abstract":"<p>Data associated with each vertex in an <code>AdjacencyList</code>.</p>"},"Protocols/_AdjacencyListPerVertexBidirectional.html":{"name":"_AdjacencyListPerVertexBidirectional","abstract":"<p>Augments <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_AdjacencyListPerVertex.html\">_AdjacencyListPerVertex</a></code> with reverse edge information.</p>"},"Protocols/_AdjacencyListPerVertexUndirected.html":{"name":"_AdjacencyListPerVertexUndirected","abstract":"<p>Undocumented</p>"},"Structs/_AdjacencyList_BidirectionalPerEdge.html":{"name":"_AdjacencyList_BidirectionalPerEdge","abstract":"<p>All internal information stored within a bidirectional graph for each edge.</p>"},"Structs/_AdjacencyList_BidirectionalPerVertex.html":{"name":"_AdjacencyList_BidirectionalPerVertex","abstract":"<p>Undocumented</p>"},"Structs/_AdjacencyList_DirectedEdgeCollection.html":{"name":"_AdjacencyList_DirectedEdgeCollection","abstract":"<p>A collection of all edges in an <code>AdjacencyList</code>.</p>"},"Structs/_AdjacencyList_DirectedEdgeId.html":{"name":"_AdjacencyList_DirectedEdgeId","abstract":"<p>An identifier for an edge.</p>"},"Structs/_AdjacencyList_DirectedPerEdge.html":{"name":"_AdjacencyList_DirectedPerEdge","abstract":"<p>Stores all relevant information for an edge within a directed adjacency list.</p>"},"Structs/_AdjacencyList_DirectedPerVertex.html":{"name":"_AdjacencyList_DirectedPerVertex","abstract":"<p>Stores all relevant information for a vertex within a directed adjacency list.</p>"},"Structs/_AdjacencyList_DirectedVertexEdgeCollection.html":{"name":"_AdjacencyList_DirectedVertexEdgeCollection","abstract":"<p>All edges from a single vertex in an AdjacencyList graph.</p>"},"Structs/_AdjacencyList_UndirectedEdgeCollection.html":{"name":"_AdjacencyList_UndirectedEdgeCollection","abstract":"<p>Undocumented</p>"},"Structs/_AdjacencyList_UndirectedEdgeId.html":{"name":"_AdjacencyList_UndirectedEdgeId","abstract":"<p>An identifier for an edge.</p>"},"Structs/_AdjacencyList_UndirectedPerVertex.html":{"name":"_AdjacencyList_UndirectedPerVertex","abstract":"<p>Undocumented</p>"},"Structs/_AdjacencyList_UndirectedVertexEdgeCollection.html":{"name":"_AdjacencyList_UndirectedVertexEdgeCollection","abstract":"<p>Undocumented</p>"},"Structs/_DirectedAdjacencyList_ParallelProjection.html":{"name":"_DirectedAdjacencyList_ParallelProjection","abstract":"<p>A parallel representation of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DirectedAdjacencyList.html\">DirectedAdjacencyList</a></code>.</p>"},"Extensions/RectangularBoundedGrid/VertexCollection.html#/s:13PenguinGraphs12InfiniteGridVA2A011RectangularD6FilterVRszrlE16VertexCollectionV5Indexa":{"name":"Index","abstract":"<p>The index into this collection.</p>","parent_name":"VertexCollection"},"Extensions/RectangularBoundedGrid/VertexCollection.html#/s:13PenguinGraphs12InfiniteGridVA2A011RectangularD6FilterVRszrlE16VertexCollectionV7Elementa":{"name":"Element","abstract":"<p>The elements in this collection.</p>","parent_name":"VertexCollection"},"Extensions/RectangularBoundedGrid/VertexCollection.html#/s:13PenguinGraphs12InfiniteGridVA2A011RectangularD6FilterVRszrlE16VertexCollectionV10startIndexSivp":{"name":"startIndex","abstract":"<p>The first valid index in <code>self</code>.</p>","parent_name":"VertexCollection"},"Extensions/RectangularBoundedGrid/VertexCollection.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"VertexCollection"},"Extensions/RectangularBoundedGrid/VertexCollection.html#/s:13PenguinGraphs12InfiniteGridVA2A011RectangularD6FilterVRszrlE16VertexCollectionVyAA6Point2VSicip":{"name":"subscript(_:)","abstract":"<p>Returns the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Point2.html\">Point2</a></code> in <code>self</code> corresponding to <code>index</code>.</p>","parent_name":"VertexCollection"},"Extensions/RectangularBoundedGrid.html#/s:13PenguinGraphs12InfiniteGridVA2A011RectangularD6FilterVRszrlE1x1yACyAEGSNySiG_AItcfc":{"name":"init(x:y:)","abstract":"<p>Allows all points whose x and y coordinates fall within the specified ranges.</p>","parent_name":"RectangularBoundedGrid"},"Extensions/RectangularBoundedGrid/VertexCollection.html":{"name":"VertexCollection","abstract":"<p>A collection of the graph&rsquo;s vertices.</p>","parent_name":"RectangularBoundedGrid"},"Extensions/RectangularBoundedGrid.html#/s:13PenguinGraphs15VertexListGraphP8vertices0C10CollectionQzvp":{"name":"vertices","parent_name":"RectangularBoundedGrid"},"Structs/InfiniteGrid/VertexInEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV22VertexInEdgeCollectionV5Indexa":{"name":"Index","abstract":"<p>The index into the collection.</p>","parent_name":"VertexInEdgeCollection"},"Structs/InfiniteGrid/VertexInEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV22VertexInEdgeCollectionV7Elementa":{"name":"Element","abstract":"<p>The elements of the collection.</p>","parent_name":"VertexInEdgeCollection"},"Structs/InfiniteGrid/VertexInEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV22VertexInEdgeCollectionV10startIndexSivp":{"name":"startIndex","abstract":"<p>The first valid index in <code>self</code>.</p>","parent_name":"VertexInEdgeCollection"},"Structs/InfiniteGrid/VertexInEdgeCollection.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"VertexInEdgeCollection"},"Structs/InfiniteGrid/VertexInEdgeCollection.html#/s:Sl5index5after5IndexQzAD_tF":{"name":"index(after:)","parent_name":"VertexInEdgeCollection"},"Structs/InfiniteGrid/VertexInEdgeCollection.html#/s:Sly7ElementQz5IndexQzcip":{"name":"subscript(_:)","parent_name":"VertexInEdgeCollection"},"Structs/InfiniteGrid/VertexEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV20VertexEdgeCollectionV5Indexa":{"name":"Index","abstract":"<p>The index into the collection.</p>","parent_name":"VertexEdgeCollection"},"Structs/InfiniteGrid/VertexEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV20VertexEdgeCollectionV7Elementa":{"name":"Element","abstract":"<p>The elements of the collection.</p>","parent_name":"VertexEdgeCollection"},"Structs/InfiniteGrid/VertexEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV20VertexEdgeCollectionV10startIndexSivp":{"name":"startIndex","abstract":"<p>The first valid index in <code>self</code>.</p>","parent_name":"VertexEdgeCollection"},"Structs/InfiniteGrid/VertexEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV20VertexEdgeCollectionV8endIndexSivp":{"name":"endIndex","abstract":"<p>One past the last valid index in <code>self</code>.</p>","parent_name":"VertexEdgeCollection"},"Structs/InfiniteGrid/VertexEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV20VertexEdgeCollectionV5index5afterS2i_tF":{"name":"index(after:)","abstract":"<p>Computes the next index in <code>self</code>.</p>","parent_name":"VertexEdgeCollection"},"Structs/InfiniteGrid/VertexEdgeCollection.html#/s:13PenguinGraphs12InfiniteGridV20VertexEdgeCollectionVyAA0dF0VSicip":{"name":"subscript(_:)","abstract":"<p>Accesses the grid edge at <code>index</code>.</p>","parent_name":"VertexEdgeCollection"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridVyACyxGxcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV8VertexIda":{"name":"VertexId","abstract":"<p>Name of a vertex in <code>self</code>.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV6EdgeIda":{"name":"EdgeId","abstract":"<p>Name of an edge in <code>self</code>.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid/VertexEdgeCollection.html":{"name":"VertexEdgeCollection","abstract":"<p>The collection of edges from a single vertex in an infinite grid.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV5edges4fromAC20VertexEdgeCollectionVyx_GAA6Point2V_tF":{"name":"edges(from:)","abstract":"<p>Returns the collection of edges whose source is <code>vertex</code>.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV6source2ofAA6Point2VAA0D4EdgeV_tF":{"name":"source(of:)","abstract":"<p>Returns the source <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV8VertexIda\">VertexId</a></code> of <code>edge</code>.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV11destination2ofAA6Point2VAA0D4EdgeV_tF":{"name":"destination(of:)","abstract":"<p>Returns the destnation <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV8VertexIda\">VertexId</a></code> of <code>edge</code>.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid/VertexInEdgeCollection.html":{"name":"VertexInEdgeCollection","abstract":"<p>The collection of all edges whose destination is a single vertex in an infinite grid.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs18BidirectionalGraphP5edges2to22VertexInEdgeCollectionQz0G2IdQz_tF":{"name":"edges(to:)","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV15DefaultColorMapa":{"name":"DefaultColorMap","abstract":"<p>The default color map to use when searching <code>self</code>.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridV19makeDefaultColorMap9repeatingAA018DictionaryPropertyH0VyACyxGAA6Point2VAA06VertexG0OGAL_tF":{"name":"makeDefaultColorMap(repeating:)","abstract":"<p>Creates a vertex color map repeating <code>color</code> for every vertex in <code>self</code>.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html#/s:13PenguinGraphs12InfiniteGridVACyxGycfc":{"name":"init()","abstract":"<p>Creates an infinite grid with a default initialized filter.</p>","parent_name":"InfiniteGrid"},"Structs/InfiniteGrid.html":{"name":"InfiniteGrid","abstract":"<p>A graph of two dimensional coordinates and their local connections.</p>"},"Other%20graph%20types.html#/s:13PenguinGraphs20CompleteInfiniteGrida":{"name":"CompleteInfiniteGrid","abstract":"<p>An infinite grid with no missing edges or vertices.</p>"},"Other%20graph%20types.html#/s:13PenguinGraphs21CompleteManhattenGrida":{"name":"CompleteManhattenGrid","abstract":"<p>An infinite grid with no missing vertices and only edges in cardinal directions.</p>"},"Other%20graph%20types.html#/s:13PenguinGraphs22RectangularBoundedGrida":{"name":"RectangularBoundedGrid","abstract":"<p>A grid with a rectangular bound.</p>"},"Extensions/RectangularBoundedGrid.html":{"name":"RectangularBoundedGrid"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs11PropertyMapP3KeyQa":{"name":"Key","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs11PropertyMapP5ValueQa":{"name":"Value","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs23InternalEdgePropertyMapV3forACyxGxh_tcfc":{"name":"init(for:)","abstract":"<p>Create an <code>InternalEdgePropertyMap</code> for <code>graph</code>.</p>","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs23InternalEdgePropertyMapVACyxGycfc":{"name":"init()","abstract":"<p>Creates an <code>InternalEdgePropertyMap</code>.</p>","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs23InternalEdgePropertyMapV3get_2in0D0Qz0D2IdQz_xtF":{"name":"get(_:in:)","abstract":"<p>Retrieves the property value from <code>graph</code> for <code>edge</code>.</p>","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs11PropertyMapP3set_2in2toy3KeyQz_5GraphQzz5ValueQztF":{"name":"set(_:in:to:)","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3get_2in5ValueQz3KeyQz_5Graph_0C10ProjectionQZtF":{"name":"get(_:in:)","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3set_2in2toy3KeyQz_5Graph_0C10ProjectionQZz5ValueQztF":{"name":"set(_:in:to:)","parent_name":"InternalEdgePropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs11PropertyMapP3KeyQa":{"name":"Key","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs11PropertyMapP5ValueQa":{"name":"Value","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs25InternalVertexPropertyMapV3forACyxGxh_tcfc":{"name":"init(for:)","abstract":"<p>Create an <code>InternalVertexPropertyMap</code> for <code>graph</code>.</p>","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs25InternalVertexPropertyMapVACyxGycfc":{"name":"init()","abstract":"<p>Creates an <code>InternalVertexPropertyMap</code>.</p>","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs25InternalVertexPropertyMapV3get_2in0D0Qz0D2IdQz_xtF":{"name":"get(_:in:)","abstract":"<p>Retrieves the property value from <code>graph</code> for <code>vertex</code>.</p>","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs11PropertyMapP3set_2in2toy3KeyQz_5GraphQzz5ValueQztF":{"name":"set(_:in:to:)","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3get_2in5ValueQz3KeyQz_5Graph_0C10ProjectionQZtF":{"name":"get(_:in:)","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3set_2in2toy3KeyQz_5Graph_0C10ProjectionQZz5ValueQztF":{"name":"set(_:in:to:)","parent_name":"InternalVertexPropertyMap"},"Structs/TransformingPropertyMap.html#/s:13PenguinGraphs11PropertyMapP3get_2in5ValueQz3KeyQz_5GraphQztF":{"name":"get(_:in:)","parent_name":"TransformingPropertyMap"},"Structs/TransformingPropertyMap.html#/s:13PenguinGraphs11PropertyMapP3set_2in2toy3KeyQz_5GraphQzz5ValueQztF":{"name":"set(_:in:to:)","parent_name":"TransformingPropertyMap"},"Structs/TransformingPropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3get_2in5ValueQz3KeyQz_5Graph_0C10ProjectionQZtF":{"name":"get(_:in:)","parent_name":"TransformingPropertyMap"},"Structs/TransformingPropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3set_2in2toy3KeyQz_5Graph_0C10ProjectionQZz5ValueQztF":{"name":"set(_:in:to:)","parent_name":"TransformingPropertyMap"},"Structs/ClosurePropertyMap.html#/s:13PenguinGraphs18ClosurePropertyMapV16propertyProducerACyxq_q0_Gq0_q_c_tcfc":{"name":"init(propertyProducer:)","abstract":"<p>Undocumented</p>","parent_name":"ClosurePropertyMap"},"Structs/ClosurePropertyMap.html#/s:13PenguinGraphs19ExternalPropertyMapPy5ValueQz3KeyQzcip":{"name":"subscript(_:)","parent_name":"ClosurePropertyMap"},"Structs/DictionaryPropertyMap.html#/s:13PenguinGraphs21DictionaryPropertyMapV_12defaultValueACyxq_q0_GSDyq_q0_G_q0_Sgtcfc":{"name":"init(_:defaultValue:)","abstract":"<p>Initialize <code>self</code> providing <code>values</code> for each edge.</p>","parent_name":"DictionaryPropertyMap"},"Structs/DictionaryPropertyMap.html#/s:13PenguinGraphs19ExternalPropertyMapPy5ValueQz3KeyQzcip":{"name":"subscript(_:)","parent_name":"DictionaryPropertyMap"},"Structs/DictionaryPropertyMap.html#/s:13PenguinGraphs21DictionaryPropertyMapVAA6EdgeIdQzRs_rlE_10forEdgesInACyxq_q0_GSDyq_q0_G_xhtcfc":{"name":"init(_:forEdgesIn:)","abstract":"<p>Initializes <code>self</code> using <code>values</code>; <code>graph</code> is unused, but helps type inference along nicely.</p>","parent_name":"DictionaryPropertyMap"},"Structs/DictionaryPropertyMap.html#/s:13PenguinGraphs21DictionaryPropertyMapVAA8VertexIdQzRs_rlE_13forVerticesInACyxq_q0_GSDyq_q0_G_xhtcfc":{"name":"init(_:forVerticesIn:)","abstract":"<p>Initializes <code>self</code> using <code>values</code>; <code>graph</code> is unused, but helps type inference along.</p>","parent_name":"DictionaryPropertyMap"},"Structs/DictionaryPropertyMap.html#/s:13PenguinGraphs21DictionaryPropertyMapVAA8VertexIdQzRs_rlE9repeating13forVerticesInACyxq_q0_Gq0__xhtcfc":{"name":"init(repeating:forVerticesIn:)","abstract":"<p>Initializes <code>self</code> where every vertex has <code>value</code>; <code>graph</code> is used for type inference.</p>","parent_name":"DictionaryPropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapV6valuesSayq0_Gvp":{"name":"values","abstract":"<p>Undocumented</p>","parent_name":"TablePropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapV9repeating5countACyxq_q0_Gq0__Sitcfc":{"name":"init(repeating:count:)","abstract":"<p>Creates an instance where every key has value <code>initialValue</code>.</p>","parent_name":"TablePropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapVyACyxq_q0_GSayq0_Gcfc":{"name":"init(_:)","abstract":"<p>Creates an instance with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapV6valuesSayq0_Gvp\">values</a></code>, indexed by <code>\\Key.index</code>.</p>","parent_name":"TablePropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs19ExternalPropertyMapPy5ValueQz3KeyQzcip":{"name":"subscript(_:)","parent_name":"TablePropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapVA2A15VertexListGraphRz0F2IdQzRs_rlE9repeating13forVerticesInACyxq_q0_Gq0__xhtcfc":{"name":"init(repeating:forVerticesIn:)","abstract":"<p>Creates an instance where every vertex has <code>initialValue</code> for use with <code>graph</code>.</p>","parent_name":"TablePropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapVA2A15VertexListGraphRz0F2IdQzRs_rlE_13forVerticesInACyxq_q0_GSayq0_G_xhtcfc":{"name":"init(_:forVerticesIn:)","abstract":"<p>Creates an instance where the verticies have values <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapV6valuesSayq0_Gvp\">values</a></code>.</p>","parent_name":"TablePropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapV5countACyxq_q0_GSi_tcfc":{"name":"init(count:)","abstract":"<p>Initializes <code>self</code> with the default value for <code>count</code> verticies.</p>","parent_name":"TablePropertyMap"},"Structs/TablePropertyMap.html#/s:13PenguinGraphs16TablePropertyMapVA2A15VertexListGraphRzrlE13forVerticesInACyxq_q0_Gxh_tcfc":{"name":"init(forVerticesIn:)","abstract":"<p>Undocumented</p>","parent_name":"TablePropertyMap"},"Protocols/ParallelCapablePropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3get_2in5ValueQz3KeyQz_5Graph_0C10ProjectionQZtF":{"name":"get(_:in:)","abstract":"<p>Returns the <code>Value</code> associated with <code>key</code> in a parallel <code>graph</code>.</p>","parent_name":"ParallelCapablePropertyMap"},"Protocols/ParallelCapablePropertyMap.html#/s:13PenguinGraphs26ParallelCapablePropertyMapP3set_2in2toy3KeyQz_5Graph_0C10ProjectionQZz5ValueQztF":{"name":"set(_:in:to:)","abstract":"<p>Updates the <code>Value</code> associated with <code>key</code> in the parallel <code>graph</code>.</p>","parent_name":"ParallelCapablePropertyMap"},"Protocols/ExternalPropertyMap.html#/s:13PenguinGraphs19ExternalPropertyMapPy5ValueQz3KeyQzcip":{"name":"subscript(_:)","abstract":"<p>Accesses the <code>Value</code> for a given <code>Key</code>.</p>","parent_name":"ExternalPropertyMap"},"Protocols/ExternalPropertyMap.html#/s:13PenguinGraphs11PropertyMapP3get_2in5ValueQz3KeyQz_5GraphQztF":{"name":"get(_:in:)","parent_name":"ExternalPropertyMap"},"Protocols/ExternalPropertyMap.html#/s:13PenguinGraphs11PropertyMapP3set_2in2toy3KeyQz_5GraphQzz5ValueQztF":{"name":"set(_:in:to:)","parent_name":"ExternalPropertyMap"},"Protocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP5GraphQa":{"name":"Graph","abstract":"<p>The graph this property map holds properties for.</p>","parent_name":"PropertyMap"},"Protocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP3KeyQa":{"name":"Key","abstract":"<p>The key used to look up values in this property map.</p>","parent_name":"PropertyMap"},"Protocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP5ValueQa":{"name":"Value","abstract":"<p>The data stored in the property map.</p>","parent_name":"PropertyMap"},"Protocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP3get_2in5ValueQz3KeyQz_5GraphQztF":{"name":"get(_:in:)","abstract":"<p>Returns the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP5ValueQa\">Value</a></code> associated with <code>key</code> in <code>graph</code>.</p>","parent_name":"PropertyMap"},"Protocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP3set_2in2toy3KeyQz_5GraphQzz5ValueQztF":{"name":"set(_:in:to:)","abstract":"<p>Sets the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP5ValueQa\">Value</a></code> associated with <code>key</code> in <code>graph</code>.</p>","parent_name":"PropertyMap"},"Protocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapPAAE9transformyAA012TransformingcD0Vyqd__xGs15WritableKeyPathCy5ValueQzqd__GlF":{"name":"transform(_:)","abstract":"<p>Returns a new property map based on <code>Self</code> that accesses <code>keyPath</code> from <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PropertyMap.html#/s:13PenguinGraphs11PropertyMapP5ValueQa\">Value</a></code>.</p>","parent_name":"PropertyMap"},"Protocols/PropertyMap.html":{"name":"PropertyMap","abstract":"<p>Abstracts over storage location for values associated with graphs.</p>"},"Protocols/ExternalPropertyMap.html":{"name":"ExternalPropertyMap","abstract":"<p>External property maps store data outside the graph.</p>"},"Protocols/ParallelCapablePropertyMap.html":{"name":"ParallelCapablePropertyMap","abstract":"<p>A <code>ParallelCapablePropertyMap</code> is one that can be used with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ParallelGraph.html\">ParallelGraph</a></code>s in vertex-parallel"},"Structs/TablePropertyMap.html":{"name":"TablePropertyMap","abstract":"<p>A table-based external property map.</p>"},"Structs/DictionaryPropertyMap.html":{"name":"DictionaryPropertyMap","abstract":"<p>An external property map backed by a dictionary.</p>"},"Structs/ClosurePropertyMap.html":{"name":"ClosurePropertyMap","abstract":"<p>A read-only property map whose values are computed by a closure.</p>"},"Structs/TransformingPropertyMap.html":{"name":"TransformingPropertyMap","abstract":"<p>Transforms an existing property map (<code>Underlying</code>) to project out a single underlying field from"},"Structs/InternalVertexPropertyMap.html":{"name":"InternalVertexPropertyMap","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PropertyMap.html\">PropertyMap</a></code> over the vertices of <code>Graph</code>.</p>"},"Structs/InternalEdgePropertyMap.html":{"name":"InternalEdgePropertyMap","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PropertyMap.html\">PropertyMap</a></code> over the edges of <code>Graph</code>.</p>"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP9repeatingxSf_tcfc":{"name":"init(repeating:)","abstract":"<p>Initializes where every label has <code>value</code>.</p>","parent_name":"LabelBundle"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP5scale2byySf_tF":{"name":"scale(by:)","abstract":"<p>Scales the weights of the labels in this LabelBundle by <code>scalar</code>.</p>","parent_name":"LabelBundle"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP6scaled2byxSf_tF":{"name":"scaled(by:)","abstract":"<p>Returns scaled weights for the labels in <code>self</code> by <code>scalar</code>.</p>","parent_name":"LabelBundle"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP14conditionalAdd_5whereySf_xtF":{"name":"conditionalAdd(_:where:)","abstract":"<p>Adds <code>scalar</code> to every label.</p>","parent_name":"LabelBundle"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP15fillMissingFromyyxF":{"name":"fillMissingFrom(_:)","abstract":"<p>Update <code>self</code>&lsquo;s value for every label not contained in <code>self</code> and contained in <code>other</code>.</p>","parent_name":"LabelBundle"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP2peoiyyxz_SftFZ":{"name":"+=(_:_:)","abstract":"<p>Add <code>rhs</code> to the value of every label in <code>self</code>&lsquo;s label set.</p>","parent_name":"LabelBundle"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP2peoiyyxz_xtFZ":{"name":"+=(_:_:)","abstract":"<p>Add the weights for all labels in <code>rhs</code> to the corresponding labels in <code>lhs</code>.</p>","parent_name":"LabelBundle"},"Protocols/LabelBundle.html#/s:13PenguinGraphs11LabelBundleP1doiyxx_xtFZ":{"name":"/(_:_:)","abstract":"<p>Divides lhs by rhs.</p>","parent_name":"LabelBundle"},"Protocols/LabeledVertex.html#/s:13PenguinGraphs13LabeledVertexP6LabelsQa":{"name":"Labels","abstract":"<p>A datatype that stores partially defined labels.</p>","parent_name":"LabeledVertex"},"Protocols/LabeledVertex.html#/s:13PenguinGraphs13LabeledVertexP23totalIncomingEdgeWeightSfvp":{"name":"totalIncomingEdgeWeight","abstract":"<p>The sum of weights for all incoming edges.</p>","parent_name":"LabeledVertex"},"Protocols/LabeledVertex.html#/s:13PenguinGraphs13LabeledVertexP10seedLabels0F0Qzvp":{"name":"seedLabels","abstract":"<p>The apriori known label values.</p>","parent_name":"LabeledVertex"},"Protocols/LabeledVertex.html#/s:13PenguinGraphs13LabeledVertexP5prior6LabelsQzvp":{"name":"prior","abstract":"<p>A prior for how strong the belief in seed labels is.</p>","parent_name":"LabeledVertex"},"Protocols/LabeledVertex.html#/s:13PenguinGraphs13LabeledVertexP14computedLabels0F0Qzvp":{"name":"computedLabels","abstract":"<p>The labels that result from the iterated label propagation computation.</p>","parent_name":"LabeledVertex"},"Structs/IncomingEdgeWeightSumMessage.html#/s:13PenguinGraphs28IncomingEdgeWeightSumMessageVyACSfcfc":{"name":"init(_:)","abstract":"<p>Creates an <code>IncomingEdgeWeightSumMessage</code> from <code>value</code>.</p>","parent_name":"IncomingEdgeWeightSumMessage"},"Structs/IncomingEdgeWeightSumMessage.html#/s:13PenguinGraphs28IncomingEdgeWeightSumMessageV5mergeyyACF":{"name":"merge(_:)","abstract":"<p>Sums weights of <code>other</code> with <code>self</code>.</p>","parent_name":"IncomingEdgeWeightSumMessage"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleVACyxGycfc":{"name":"init()","abstract":"<p>Constructs a <code>SIMDLabelBundle</code> with uninitialized weights for all labels in the bundle.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV7weights16validWeightsMaskACyxGx_0H7StorageQztcfc":{"name":"init(weights:validWeightsMask:)","abstract":"<p>Constructs a <code>SIMDLabelBundle</code> with provided <code>weights</code> and <code>validWeightsMask</code>.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV7weightsACyxGx_tcfc":{"name":"init(weights:)","abstract":"<p>Constructs a <code>SIMDLabelBundle</code> with provided <code>weights</code>.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleVySfSgSicip":{"name":"subscript(_:)","abstract":"<p>Accesses the weight associated with the given index.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV9repeatingACyxGSf_tcfc":{"name":"init(repeating:)","abstract":"<p>Creates a <code>SIMDLabelBundle</code> with <code>value</code> set for each label&rsquo;s weight.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV5scale2byySf_tF":{"name":"scale(by:)","abstract":"<p>Scales the weights of <code>self</code> by <code>scalar</code>.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV14conditionalAdd_5whereySf_ACyxGtF":{"name":"conditionalAdd(_:where:)","abstract":"<p>Adds <code>scalar</code> to every weight of <code>self</code> where <code>hasValue</code> has valid weight labels.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV15fillMissingFromyyACyxGF":{"name":"fillMissingFrom(_:)","abstract":"<p>Sets weights for every label to <code>other</code>&lsquo;s where the label is not defined in <code>self</code>, and is","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV5mergeyyACyxGF":{"name":"merge(_:)","abstract":"<p>Merges <code>other</code> into <code>self</code> by summing weights.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV2peoiyyACyxGz_SftFZ":{"name":"+=(_:_:)","abstract":"<p>Adds <code>rhs</code> to every defined label&rsquo;s corresponding weight in <code>lhs</code>.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV2peoiyyACyxGz_AEtFZ":{"name":"+=(_:_:)","abstract":"<p>Adds weights for <code>rhs</code> into <code>lhs</code>.","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV1doiyACyxGAE_AEtFZ":{"name":"/(_:_:)","abstract":"<p>Divide weights in <code>lhs</code> by the weights for the corresponding labels in <code>rhs</code>.</p>","parent_name":"SIMDLabelBundle"},"Structs/SIMDLabelBundle.html#/s:13PenguinGraphs15SIMDLabelBundleV11descriptionSSvp":{"name":"description","abstract":"<p>A string representation of <code>SIMDLabelBundle</code>.</p>","parent_name":"SIMDLabelBundle"},"Structs/DistanceSearchMessage.html#/s:13PenguinGraphs21DistanceSearchMessageV5mergeyyACyxq_GF":{"name":"merge(_:)","abstract":"<p>Merges <code>self</code> with <code>other</code>.</p>","parent_name":"DistanceSearchMessage"},"Protocols/ReachableVertex.html#/s:13PenguinGraphs15ReachableVertexP02isC0Sbvp":{"name":"isReachable","abstract":"<p>True if <code>self</code> is reachable from the starting point.</p>","parent_name":"ReachableVertex"},"Protocols/DistanceVertex.html#/s:13PenguinGraphs14DistanceVertexP0D2IdQa":{"name":"VertexId","abstract":"<p>A &ldquo;pointer&rdquo; to the parent in the search tree.</p>","parent_name":"DistanceVertex"},"Protocols/DistanceVertex.html#/s:13PenguinGraphs14DistanceVertexP0C0Qa":{"name":"Distance","abstract":"<p>A measure of the distance within the graph.</p>","parent_name":"DistanceVertex"},"Protocols/DistanceVertex.html#/s:13PenguinGraphs14DistanceVertexP8distance0C0Qzvp":{"name":"distance","abstract":"<p>The distance from the start vertex (verticies).</p>","parent_name":"DistanceVertex"},"Protocols/DistanceVertex.html#/s:13PenguinGraphs14DistanceVertexP11predecessor0D2IdQzSgvp":{"name":"predecessor","abstract":"<p>The predecessor vertex.</p>","parent_name":"DistanceVertex"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextV6vertex8VertexIdQzvp":{"name":"vertex","abstract":"<p>The identifier of the vertex this function execution is operating upon.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextV11globalStateq0_vp":{"name":"globalState","abstract":"<p>The global state provided to each vertex.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextV6vertex11globalState5graph7mailboxACyxq_q0_q1_G8VertexIdQz_q0_xSpyq1_Gtcfc":{"name":"init(vertex:globalState:graph:mailbox:)","abstract":"<p>Initializes <code>self</code> with the given properties.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextV5inboxq_Sgvp":{"name":"inbox","abstract":"<p>The merged message resulting from merging all the messages sent in the last parallel step.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextV4send_2toyq__8VertexIdQztF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextV6vertex8VertexIdQzvp\">vertex</a></code>, which will be received at the next step.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextV15getEdgeProperty3for2in5ValueQyd__0H2IdQz_qd__tAA0c7CapableI3MapRd__3KeyQyd__AJRS0D0_0C10ProjectionQYd__ANRt1_lF":{"name":"getEdgeProperty(for:in:)","abstract":"<p>Retrieve edge propreties.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextVA2A09IncidenceD0RzrlE9outDegreeSivp":{"name":"outDegree","abstract":"<p>The number of edges that source from the current vertex.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextVA2A09IncidenceD0RzrlE5edges20VertexEdgeCollectionQzvp":{"name":"edges","abstract":"<p>The edges that source from the current vertex.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:13PenguinGraphs29ParallelGraphAlgorithmContextVA2A09IncidenceD0RzrlE11destination2of8VertexIdQz04EdgeK0Qz_tF":{"name":"destination(of:)","abstract":"<p>Returns the destination of <code>edge</code>.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/SequentialMailboxes/Mailbox.html#/s:13PenguinGraphs19SequentialMailboxesV7MailboxV5inboxxSgvp":{"name":"inbox","abstract":"<p>The incoming message.</p>","parent_name":"Mailbox"},"Structs/SequentialMailboxes/Mailbox.html#/s:13PenguinGraphs19SequentialMailboxesV7MailboxV4send_2toyx_8VertexIdQy_tF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code>vertex</code> next step.</p>","parent_name":"Mailbox"},"Structs/SequentialMailboxes.html#/s:13PenguinGraphs19SequentialMailboxesV11vertexCountACyxq_GSi_tcfc":{"name":"init(vertexCount:)","abstract":"<p>Initializes <code>self</code> for a given graph size.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes/Mailbox.html":{"name":"Mailbox","abstract":"<p>A mailbox that merges messages together.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes.html#/s:13PenguinGraphs19SequentialMailboxesV7deliverSbyF":{"name":"deliver()","abstract":"<p>Transfers messages that were previously sent into the inboxes of the verticies.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes.html#/s:13PenguinGraphs19SequentialMailboxesV11withMailbox3for_y8VertexIdQy__yAC0F0Vyxq__GzKXEtKF":{"name":"withMailbox(for:_:)","abstract":"<p>Executes <code>fn</code> passing in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SequentialMailboxes/Mailbox.html\">Mailbox</a></code> for <code>vertex</code>.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes.html#/s:13PenguinGraphs19SequentialMailboxesV3for7sendingACyxq_Gqd__h_xmtc18ParallelProjectionAA0G5GraphPQyd__Rs_AaHRd__AA010VertexListI0Rd__lufc":{"name":"init(for:sending:)","abstract":"<p>Initialize mailboxes for <code>graph</code> for <code>messageType</code> messages.</p>","parent_name":"SequentialMailboxes"},"Classes/PerThreadMailboxes/Mailbox.html#/s:13PenguinGraphs18PerThreadMailboxesC7MailboxV5inboxxSgvp":{"name":"inbox","abstract":"<p>The incoming message.</p>","parent_name":"Mailbox"},"Classes/PerThreadMailboxes/Mailbox.html#/s:13PenguinGraphs18PerThreadMailboxesC7MailboxV4send_2toyx_8VertexIdQy_tF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code>vertex</code> next step.</p>","parent_name":"Mailbox"},"Classes/PerThreadMailboxes.html#/s:13PenguinGraphs18PerThreadMailboxesC11vertexCount06threadG0ACyxq_GSi_Sitcfc":{"name":"init(vertexCount:threadCount:)","abstract":"<p>Initializes <code>self</code> for a given graph size.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes/Mailbox.html":{"name":"Mailbox","abstract":"<p>A mailbox that merges messages together.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes.html#/s:13PenguinGraphs18PerThreadMailboxesC7deliverSbyF":{"name":"deliver()","abstract":"<p>Transfers messages that were previously sent into the inboxes of the verticies.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes.html#/s:13PenguinGraphs18PerThreadMailboxesC11withMailbox3for_y8VertexIdQy__yAC0G0Vyxq__GzKXEtKF":{"name":"withMailbox(for:_:)","abstract":"<p>Executes <code>fn</code> passing in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PerThreadMailboxes/Mailbox.html\">Mailbox</a></code> for <code>vertex</code>.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes.html#/s:13PenguinGraphs18PerThreadMailboxesC3for7sendingACyxq_Gqd__h_xmtc18ParallelProjectionAA0H5GraphPQyd__Rs_AaHRd__AA010VertexListJ0Rd__lufc":{"name":"init(for:sending:)","abstract":"<p>Initialize mailboxes for <code>graph</code> for <code>messageType</code> messages.</p>","parent_name":"PerThreadMailboxes"},"Protocols/MailboxesProtocol.html#/s:13PenguinGraphs17MailboxesProtocolP7MailboxQa":{"name":"Mailbox","abstract":"<p>The per-vertex representation of this communication abstraction.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:13PenguinGraphs17MailboxesProtocolP7deliverSbyF":{"name":"deliver()","abstract":"<p>Transfers messages that were previously sent into the inboxes of the verticies; returns true","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:13PenguinGraphs17MailboxesProtocolP11withMailbox3for_y0F0_5Graph8VertexIdQZ_yAFQzzKXEtKF":{"name":"withMailbox(for:_:)","abstract":"<p>Executes <code>fn</code> passing in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MailboxesProtocol.html#/s:13PenguinGraphs17MailboxesProtocolP7MailboxQa\">Mailbox</a></code> for <code>vertex</code>.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:13PenguinGraphs17MailboxesProtocolPAAE5Grapha":{"name":"Graph","abstract":"<p>The graph associated with the mailboxes.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:13PenguinGraphs17MailboxesProtocolPAAE7Messagea":{"name":"Message","abstract":"<p>The type of messages that can be sent using this mailbox.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxProtocol.html#/s:13PenguinGraphs15MailboxProtocolP7MessageQa":{"name":"Message","abstract":"<p>The type of messages being exchanged.</p>","parent_name":"MailboxProtocol"},"Protocols/MailboxProtocol.html#/s:13PenguinGraphs15MailboxProtocolP5GraphQa":{"name":"Graph","abstract":"<p>The graph data structure being operated upon.</p>","parent_name":"MailboxProtocol"},"Protocols/MailboxProtocol.html#/s:13PenguinGraphs15MailboxProtocolP5inbox7MessageQzSgvp":{"name":"inbox","abstract":"<p>The consolidated message</p>","parent_name":"MailboxProtocol"},"Protocols/MailboxProtocol.html#/s:13PenguinGraphs15MailboxProtocolP4send_2toy7MessageQz_5Graph_8VertexIdQZtF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code>vertex</code> (that will be received in the next super-step).</p>","parent_name":"MailboxProtocol"},"Protocols/MergeableMessage.html#/s:13PenguinGraphs16MergeableMessageP5mergeyyxF":{"name":"merge(_:)","abstract":"<p>Merges <code>other</code> into <code>self</code>.</p>","parent_name":"MergeableMessage"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphP0C10ProjectionQa":{"name":"ParallelProjection","abstract":"<p>The parallel representation of <code>Self</code>.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphP7Contexta":{"name":"Context","abstract":"<p>The context that is passed to the vertex-parallel functions during execution.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphP06VertexC8Functiona":{"name":"VertexParallelFunction","abstract":"<p>The type of functions that can be executed in vertex-parallel fashion across the graph.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphP4step9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA0cD16AlgorithmContextVy0C10ProjectionQz7Mailbox_7MessageQYd__qd_0_ALQyd__Gz_6VertexQzztKXEtKAA17MailboxesProtocolRd__AA09MergeableM0Rd_0_AL_0D0QYd__AKRSr0_lF":{"name":"step(mailboxes:globalState:_:)","abstract":"<p>Runs <code>fn</code> across each vertex delivering messages in <code>mailboxes</code>, making <code>globalState</code>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPAAE014NoGlobalVertexC8Functiona":{"name":"NoGlobalVertexParallelFunction","abstract":"<p>A per-vertex function that doesn&rsquo;t use global state.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPAAE4stepyyqd__z_XetKcxzAaBRzAA17MailboxesProtocolRd__7Mailbox_0D0QYd__0C10ProjectionRtzr__lF":{"name":"step(mailboxes:_:)","abstract":"<p>Applies <code>fn</code> across all vertices in <code>self</code> in parallel using <code>mailboxes</code> for transport.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPA2A09IncidenceD0RzAA13LabeledVertex0G0AA08PropertyD0PRpzrlE28computeIncomingEdgeWeightSum5using_yqd__z_qd_0_t0D0Qyd_0_RszAA17MailboxesProtocolRd__AA0c7CapableH3MapRd_0_3KeyQyd_0_0K2IdAA0dP0PRtzAaD0C10ProjectionACRpz7Mailbox_ALQYd__AWRSSf5ValueRtd_0_AA0jklM7MessageVAX_0X0RTd__r0_lF":{"name":"computeIncomingEdgeWeightSum(using:_:)","abstract":"<p>Sums the weights of incoming edges into every vertex in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPA2A09IncidenceD0RzAA13LabeledVertex0G0AA08PropertyD0PRpzrlE15propagateLabels2m12m22m35using_12maxStepCount15shouldExitEarlyySf_S2fqd__zqd_0_SiSbSi_xtXEt0D0Qyd_0_RszAA17MailboxesProtocolRd__AA0c7CapableH3MapRd_0_3KeyQyd_0_6EdgeIdAA0dV0PRtzAaD0C10ProjectionACRpz7Mailbox_AQQYd__A0_RSSf5ValueRtd_0_A1__7MessageQYd__AfH_0J0RTzr0_lF":{"name":"propagateLabels(m1:m2:m3:using:_:maxStepCount:shouldExitEarly:)","abstract":"<p>Propagates labels from a few seed vertices to all connected vertices in <code>self</code>.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPA2A09IncidenceD0RzAA15ReachableVertex0G0AA08PropertyD0PRpzrlE25parallelTransitiveClosure5using12maxStepCountSiqd__z_SitAA17MailboxesProtocolRd__AaD0C10ProjectionACRpz7Mailbox_0D0QYd__AORSlF":{"name":"parallelTransitiveClosure(using:maxStepCount:)","abstract":"<p>Computes the transitive closure in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPA2A09IncidenceD0RzAA14DistanceVertex0G0AA08PropertyD0PRpzAfH_0G2IdQZAjA0D8ProtocolPRtzrlE10computeBFS10startingAt5usingSiAN_qd_0_ztSFRd__AfH_0F0QZRsd__AA09MailboxesJ0Rd_0_AaD0C10ProjectionACRpz7Mailbox_0D0QYd_0_AVRSAA0F13SearchMessageVyANqd__GAW_0T0RTd_0_r0_lF":{"name":"computeBFS(startingAt:using:)","abstract":"<p>Executes breadth first search in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPA2A09IncidenceD0RzAA14DistanceVertex0G0AA08PropertyD0PRpzAfH_0G2IdQZAjA0D8ProtocolPRtzrlE10computeBFS10startingAt5usingSiAN_qd_0_zts17FixedWidthIntegerRd__AfH_0F0QZRsd__AA09MailboxesJ0Rd_0_AaD0C10ProjectionACRpz7Mailbox_0D0QYd_0_AWRSAA0F13SearchMessageVyANqd__GAX_0W0RTd_0_r0_lF":{"name":"computeBFS(startingAt:using:)","abstract":"<p>Executes breadth first search in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPA2A09IncidenceD0RzAA14DistanceVertex0G0AA08PropertyD0PRpzAfH_0G2IdQZAjA0D8ProtocolPRtzrlE10computeBFS10startingAt19effectivelyInfinite5usingSiqd___qd_0_qd_1_ztSlRd__AfH_0F0QZRsd_0_AA09MailboxesJ0Rd_1_AaD0C10ProjectionACRpz7Mailbox_0D0QYd_1_AWRS7ElementQyd__ANRSAKA0_RSAA0F13SearchMessageVyANqd_0_GAX_0W0RTd_1_r1_lF":{"name":"computeBFS(startingAt:effectivelyInfinite:using:)","abstract":"<p>Executes breadth first search in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:13PenguinGraphs13ParallelGraphPA2A09IncidenceD0RzAA14DistanceVertex0G0AA08PropertyD0PRpzAfH_0G2IdQZAjA0D8ProtocolPRtzrlE20computeShortestPaths10startingAt08stoppingO09distances19effectivelyInfinite9mailboxes12maximumStepsSiAN_ANSgqd_1_qd__qd_0_zSiSgt0D0Qyd_1_Rsz5ValueQyd_1_Rsd__AA09MailboxesJ0Rd_0_AA0c7CapableH3MapRd_1_3KeyQyd_1_04EdgeI0AMRtzAaD0C10ProjectionACRpz7Mailbox_AXQYd_0_A7_RSAfH_0F0QZA_RSAA0F13SearchMessageVyANqd__GA8__7MessageRTd_0_r1_lF":{"name":"computeShortestPaths(startingAt:stoppingAt:distances:effectivelyInfinite:mailboxes:maximumSteps:)","abstract":"<p>Computes the shortest paths from <code>startVertex</code>.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html":{"name":"ParallelGraph","abstract":"<p>A graph that supports vertex-parallel graph algorithms.</p>"},"Protocols/MergeableMessage.html":{"name":"MergeableMessage","abstract":"<p>Represents the ability to consolidate two messages into a single message.</p>"},"Protocols/MailboxProtocol.html":{"name":"MailboxProtocol","abstract":"<p>Represents the per-vertex communication abstraction for vertex-parallel algorithms.</p>"},"Protocols/MailboxesProtocol.html":{"name":"MailboxesProtocol","abstract":"<p>Represents the computation-wide communication abstraction for vertex-parallel algorithms.</p>"},"Classes/PerThreadMailboxes.html":{"name":"PerThreadMailboxes","abstract":"<p>Mailboxes that allow communication without synchronization.</p>"},"Structs/SequentialMailboxes.html":{"name":"SequentialMailboxes","abstract":"<p>A non-concurrent table-based mailbox implementation.</p>"},"Structs/ParallelGraphAlgorithmContext.html":{"name":"ParallelGraphAlgorithmContext","abstract":"<p>Context provided to the function that is invoked on a per-vertex basis.</p>"},"Protocols/DistanceVertex.html":{"name":"DistanceVertex","abstract":"<p>A vertex that can keep track of its distance from another point in the graph.</p>"},"Protocols/ReachableVertex.html":{"name":"ReachableVertex","abstract":"<p>A protocol for whether a vertex is reachable.</p>"},"Structs/DistanceSearchMessage.html":{"name":"DistanceSearchMessage","abstract":"<p>Messages used during parallel BFS and parallel shortest paths.</p>"},"Structs/SIMDLabelBundle.html":{"name":"SIMDLabelBundle","abstract":"<p>A label bundle backed by SIMD-based types.</p>"},"Structs/IncomingEdgeWeightSumMessage.html":{"name":"IncomingEdgeWeightSumMessage","abstract":"<p>A message used in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ParallelGraph.html\">ParallelGraph</a></code> algorithms to compute the sum of weights for all incoming"},"Protocols/LabeledVertex.html":{"name":"LabeledVertex","abstract":"<p>An optionally labeled vertex that can be used in the Expander algorithm for propagating labels"},"Protocols/LabelBundle.html":{"name":"LabelBundle","abstract":"<p>Represents a set of labels and their corresponding weights for use in the expander label"},"Enums/GraphErrors.html#/s:13PenguinGraphs11GraphErrorsO12edgeNotFoundyA2CmF":{"name":"edgeNotFound","abstract":"<p>No matching edge was found.</p>","parent_name":"GraphErrors"},"Enums/GraphErrors.html#/s:13PenguinGraphs11GraphErrorsO10stopSearchyA2CmF":{"name":"stopSearch","abstract":"<p>Visitors can throw this error when they would like search to immediately halt.</p>","parent_name":"GraphErrors"},"Enums/GraphErrors.html#/s:13PenguinGraphs11GraphErrorsO13cycleDetectedyA2CmF":{"name":"cycleDetected","abstract":"<p>Thrown when an unexpected cycle is detected.</p>","parent_name":"GraphErrors"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderV12predecessorsSDy8VertexIdQzAFGvp":{"name":"predecessors","abstract":"<p>A dictionary of the predecessor for a vertex.</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderVACyxGycfc":{"name":"init()","abstract":"<p>Creates an empty predecessor recorder.</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderV3forACyxGx_tcfc":{"name":"init(for:)","abstract":"<p>Creates an empty predecessor recorder (uses <code>graph</code> for type inference).</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderVy8VertexIdQzSgAEcip":{"name":"subscript(_:)","abstract":"<p>Undocumented</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderV6record_5graphyAA8DFSEventOyxG_xtF":{"name":"record(_:graph:)","abstract":"<p>Captures predecessor information during depth first search.</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderV6record_5graphyAA19DijkstraSearchEventOyxG_xtF":{"name":"record(_:graph:)","abstract":"<p>Captures predecessor information during Dijkstra&rsquo;s search.</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderV6record_5graphyAA8BFSEventOyxG_xtF":{"name":"record(_:graph:)","abstract":"<p>Captures predecessor information during breadth first search.</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/DictionaryPredecessorRecorder.html#/s:13PenguinGraphs29DictionaryPredecessorRecorderV4path2tos18ReversedCollectionVySay8VertexIdQzGGSgAI_tF":{"name":"path(to:)","abstract":"<p>Returns the sequence of vertices on the recorded path to <code>vertex</code>.</p>","parent_name":"DictionaryPredecessorRecorder"},"Structs/TablePredecessorRecorder.html#/s:13PenguinGraphs24TablePredecessorRecorderV12predecessorsSay8VertexIdQzSgGvp":{"name":"predecessors","abstract":"<p>A table of the predecessor for a vertex, organized by <code>Graph.VertexId.index</code>.</p>","parent_name":"TablePredecessorRecorder"},"Structs/TablePredecessorRecorder.html#/s:13PenguinGraphs24TablePredecessorRecorderV11vertexCountACyxGSi_tcfc":{"name":"init(vertexCount:)","abstract":"<p>Creates a PredecessorVisitor for use on graph <code>Graph</code> with <code>vertexCount</code> verticies.</p>","parent_name":"TablePredecessorRecorder"},"Structs/TablePredecessorRecorder.html#/s:13PenguinGraphs24TablePredecessorRecorderV4path2tos18ReversedCollectionVySay8VertexIdQzGGSgAI_tF":{"name":"path(to:)","abstract":"<p>Returns the sequence of vertices on the recorded path to <code>vertex</code>.</p>","parent_name":"TablePredecessorRecorder"},"Structs/TablePredecessorRecorder.html#/s:13PenguinGraphs24TablePredecessorRecorderV6record_5graphyAA8DFSEventOyxG_xtF":{"name":"record(_:graph:)","abstract":"<p>Captures predecessor information during depth first search.</p>","parent_name":"TablePredecessorRecorder"},"Structs/TablePredecessorRecorder.html#/s:13PenguinGraphs24TablePredecessorRecorderV6record_5graphyAA19DijkstraSearchEventOyxG_xtF":{"name":"record(_:graph:)","abstract":"<p>Captures predecessor information during Dijkstra&rsquo;s search.</p>","parent_name":"TablePredecessorRecorder"},"Structs/TablePredecessorRecorder.html#/s:13PenguinGraphs24TablePredecessorRecorderV6record_5graphyAA8BFSEventOyxG_xtF":{"name":"record(_:graph:)","abstract":"<p>Captures predecessor information during breadth first search.</p>","parent_name":"TablePredecessorRecorder"},"Structs/TablePredecessorRecorder.html#/s:13PenguinGraphs24TablePredecessorRecorderVA2A15VertexListGraphRzrlE3forACyxGx_tcfc":{"name":"init(for:)","abstract":"<p>Creates a <code>PredecessorVisitor</code> for use on <code>graph</code>.</p>","parent_name":"TablePredecessorRecorder"},"Protocols/GraphDistanceMeasure.html#/s:13PenguinGraphs20GraphDistanceMeasureP17effectiveInfinityxvpZ":{"name":"effectiveInfinity","abstract":"<p>A value that is effectively always higher than any reasonable possible distance within the","parent_name":"GraphDistanceMeasure"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO6Vertexa":{"name":"Vertex","abstract":"<p>Identifies a vertex in the search space.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO4Edgea":{"name":"Edge","abstract":"<p>Identifies an edge in the search space.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO5startyACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"start(_:)","abstract":"<p>The start of search, recording the starting vertex.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO8discoveryACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"discover(_:)","abstract":"<p>When a new vertex is discovered in the search space.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO13examineVertexyACyxG0G2IdQzcAEmAA13GraphProtocolRzlF":{"name":"examineVertex(_:)","abstract":"<p>When a vertex is popped off the priority queue for processing.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO11examineEdgeyACyxG0G2IdQzcAEmAA13GraphProtocolRzlF":{"name":"examineEdge(_:)","abstract":"<p>When an edge is traversed to look for new vertices to discover.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO11edgeRelaxedyACyxG6EdgeIdQzcAEmAA13GraphProtocolRzlF":{"name":"edgeRelaxed(_:)","abstract":"<p>When the edge forms the final segment in the new shortest path to the destination vertex.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO14edgeNotRelaxedyACyxG6EdgeIdQzcAEmAA13GraphProtocolRzlF":{"name":"edgeNotRelaxed(_:)","abstract":"<p>When the edge does not make up part of a shortest path in the search space.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DijkstraSearchEvent.html#/s:13PenguinGraphs19DijkstraSearchEventO6finishyACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"finish(_:)","abstract":"<p>When a vertex&rsquo;s outgoing edges have all been analyzed.</p>","parent_name":"DijkstraSearchEvent"},"Enums/DFSEvent.html#/s:13PenguinGraphs8DFSEventO5startyACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"start(_:)","abstract":"<p>The start of the depth first search, recording the starting vertex.</p>","parent_name":"DFSEvent"},"Enums/DFSEvent.html#/s:13PenguinGraphs8DFSEventO8discoveryACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"discover(_:)","abstract":"<p>When a new vertex is discovered in the search space.</p>","parent_name":"DFSEvent"},"Enums/DFSEvent.html#/s:13PenguinGraphs8DFSEventO7examineyACyxG6EdgeIdQzcAEmAA13GraphProtocolRzlF":{"name":"examine(_:)","abstract":"<p>When an edge is traversed to explore the destination.</p>","parent_name":"DFSEvent"},"Enums/DFSEvent.html#/s:13PenguinGraphs8DFSEventO8treeEdgeyACyxG0E2IdQzcAEmAA13GraphProtocolRzlF":{"name":"treeEdge(_:)","abstract":"<p>When the edge is determined to form part of the search tree.</p>","parent_name":"DFSEvent"},"Enums/DFSEvent.html#/s:13PenguinGraphs8DFSEventO8backEdgeyACyxG0E2IdQzcAEmAA13GraphProtocolRzlF":{"name":"backEdge(_:)","abstract":"<p>When the edge&rsquo;s destination is being processed (i.e. already on the stack).</p>","parent_name":"DFSEvent"},"Enums/DFSEvent.html#/s:13PenguinGraphs8DFSEventO18forwardOrCrossEdgeyACyxG0G2IdQzcAEmAA13GraphProtocolRzlF":{"name":"forwardOrCrossEdge(_:)","abstract":"<p>When the edge&rsquo;s destination has already been processed.</p>","parent_name":"DFSEvent"},"Enums/DFSEvent.html#/s:13PenguinGraphs8DFSEventO6finishyACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"finish(_:)","abstract":"<p>When all edges from a vertex have been explored.</p>","parent_name":"DFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO6Vertexa":{"name":"Vertex","abstract":"<p>Identifies a vertex in the search space.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO4Edgea":{"name":"Edge","abstract":"<p>Identifies an edge in the search space.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO5startyACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"start(_:)","abstract":"<p>When search begins, identifying the the start vertex.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO8discoveryACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"discover(_:)","abstract":"<p>When a new vertex is discovered in the search space.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO13examineVertexyACyxG0E2IdQzcAEmAA13GraphProtocolRzlF":{"name":"examineVertex(_:)","abstract":"<p>When a vertex is popped off the front of the queue for processing.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO11examineEdgeyACyxG0E2IdQzcAEmAA13GraphProtocolRzlF":{"name":"examineEdge(_:)","abstract":"<p>When an edge is traversed to look for new vertices to discover.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO8treeEdgeyACyxG0E2IdQzcAEmAA13GraphProtocolRzlF":{"name":"treeEdge(_:)","abstract":"<p>When an edge&rsquo;s destination has not been encountered before in the search; this edge forms part","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO11nonTreeEdgeyACyxG0F2IdQzcAEmAA13GraphProtocolRzlF":{"name":"nonTreeEdge(_:)","abstract":"<p>When an edge&rsquo;s destination has already been encountered before in the search.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO15grayDestinationyACyxG6EdgeIdQzcAEmAA13GraphProtocolRzlF":{"name":"grayDestination(_:)","abstract":"<p>When the edge&rsquo;s destination has previously been discovered, but has not been examined.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO16blackDestinationyACyxG6EdgeIdQzcAEmAA13GraphProtocolRzlF":{"name":"blackDestination(_:)","abstract":"<p>When the edge&rsquo;s destination has already been discovered and examined.</p>","parent_name":"BFSEvent"},"Enums/BFSEvent.html#/s:13PenguinGraphs8BFSEventO6finishyACyxG8VertexIdQzcAEmAA13GraphProtocolRzlF":{"name":"finish(_:)","abstract":"<p>When all edges from a vertex have been traversed.</p>","parent_name":"BFSEvent"},"Enums/VertexColor.html#/s:13PenguinGraphs11VertexColorO5whiteyA2CmF":{"name":"white","abstract":"<p>white is used for unseen vertices in the graph.</p>","parent_name":"VertexColor"},"Enums/VertexColor.html#/s:13PenguinGraphs11VertexColorO4grayyA2CmF":{"name":"gray","abstract":"<p>gray is used for vertices that are being processed.</p>","parent_name":"VertexColor"},"Enums/VertexColor.html#/s:13PenguinGraphs11VertexColorO5blackyA2CmF":{"name":"black","abstract":"<p>black is used for vertices that have finished processing.</p>","parent_name":"VertexColor"},"Enums/VertexColor.html":{"name":"VertexColor","abstract":"<p><code>VertexColor</code> is used to represent which vertices have been seen during graph searches.</p>"},"Enums/BFSEvent.html":{"name":"BFSEvent","abstract":"<p>The events that occur during breadth first search within a graph.</p>"},"Enums/DFSEvent.html":{"name":"DFSEvent","abstract":"<p>The events that occur during depth first search within a graph.</p>"},"Enums/DijkstraSearchEvent.html":{"name":"DijkstraSearchEvent","abstract":"<p>The events that occur during Dijkstra&rsquo;s search within a graph.</p>"},"Protocols/GraphDistanceMeasure.html":{"name":"GraphDistanceMeasure","abstract":"<p>Represents a distance measure on a graph.</p>"},"Structs/TablePredecessorRecorder.html":{"name":"TablePredecessorRecorder","abstract":"<p>A table that records the parents of every discovered vertex in a graph search algorithm.</p>"},"Structs/DictionaryPredecessorRecorder.html":{"name":"DictionaryPredecessorRecorder","abstract":"<p>A dictionary that records the parents of every discovered vertex in a graph search algorithm.</p>"},"Enums/GraphErrors.html":{"name":"GraphErrors","abstract":"<p>Errors that can be thrown during graph processing.</p>"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV8VertexIda":{"name":"VertexId","abstract":"<p>The name of a vertex in this graph.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV6EdgeIda":{"name":"EdgeId","abstract":"<p>The name of an edge in this graph.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV16VertexCollectiona":{"name":"VertexCollection","abstract":"<p>A collection of all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV8VertexIda\">VertexId</a></code>&lsquo;s in <code>self</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV9_EdgeDataa":{"name":"_EdgeData","abstract":"<p>Data structure storing per-edge information.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV11_VertexDataa":{"name":"_VertexData","abstract":"<p>Data structure storing per-vertex data.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV20VertexEdgeCollectiona":{"name":"VertexEdgeCollection","abstract":"<p>The collection of all edges whose origin is a given vertex.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV14EdgeCollectiona":{"name":"EdgeCollection","abstract":"<p>The collection of all edges in <code>self</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV8_storageSayAA01_de1_C9PerVertexVyxAA01_de14_BidirectionalG4EdgeVyq0_q_GGGvp":{"name":"_storage","abstract":"<p>The graph&rsquo;s storage!</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListVACyxq_q0_Gycfc":{"name":"init()","abstract":"<p>Initialize an empty BidirectionalAdjacencyList.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV8verticesSnyq0_Gvp":{"name":"vertices","abstract":"<p>All <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV8VertexIda\">VertexId</a></code>&lsquo;s in <code>self</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV5edges4fromAA01_de1_C20VertexEdgeCollectionVyAA01_de17_BidirectionalPerI0Vyq0_q_GGq0__tF":{"name":"edges(from:)","abstract":"<p>All edges originating from <code>vertex</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV9outDegree2ofSiq0__tF":{"name":"outDegree(of:)","abstract":"<p>The number of edges originating from <code>vertex</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV6vertexxq0__tcip":{"name":"subscript(vertex:)","abstract":"<p>Access information associated with <code>vertex</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV4edgeq_AA01_de1_C6EdgeIdVyq0_G_tcip":{"name":"subscript(edge:)","abstract":"<p>Access information associated <code>edge</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV9addVertex7storingq0_x_tF":{"name":"addVertex(storing:)","abstract":"<p>Adds a new vertex with associated <code>vertexProperty</code>, returning its identifier.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV7addEdge4from2to7storingAA01_de1_cG2IdVyq0_Gq0__q0_q_tF":{"name":"addEdge(from:to:storing:)","abstract":"<p>Adds a new edge from <code>source</code> to <code>destination</code> and associated <code>edgeProperty</code>, returning its","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV10removeEdge4from2toSbq0__q0_tF":{"name":"removeEdge(from:to:)","abstract":"<p>Removes all edges from <code>u</code> to <code>v</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV6removeyyAA01_de1_C6EdgeIdVyq0_GF":{"name":"remove(_:)","abstract":"<p>Removes <code>edge</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV11removeEdges5whereySbAA01_de1_C6EdgeIdVyq0_G_ACyxq_q0_GtXE_tF":{"name":"removeEdges(where:)","abstract":"<p>Removes all edges that <code>shouldBeRemoved</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV11removeEdges4from5whereyq0__SbAA01_de1_C6EdgeIdVyq0_G_ACyxq_q0_GtXEtF":{"name":"removeEdges(from:where:)","abstract":"<p>Remove all out edges of <code>vertex</code> that satisfy the given predicate.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV5clear6vertexyq0__tF":{"name":"clear(vertex:)","abstract":"<p>Removes all edges from <code>vertex</code>.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/UndirectedAdjacencyList.html#/s:13PenguinGraphs23UndirectedAdjacencyListV6removeyyq0_F":{"name":"remove(_:)","abstract":"<p>Removes <code>vertex</code> from the graph.</p>","parent_name":"UndirectedAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV8VertexIda":{"name":"VertexId","abstract":"<p>The name of a vertex in this graph.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV6EdgeIda":{"name":"EdgeId","abstract":"<p>The name of an edge in this graph.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV16VertexCollectiona":{"name":"VertexCollection","abstract":"<p>A collection of all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV8VertexIda\">VertexId</a></code>&lsquo;s in <code>self</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV9_EdgeDataa":{"name":"_EdgeData","abstract":"<p>Data structure storing per-edge information.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV11_VertexDataa":{"name":"_VertexData","abstract":"<p>Data structure storing per-vertex data.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV14EdgeCollectiona":{"name":"EdgeCollection","abstract":"<p>The collection of all edges in <code>self</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV20VertexEdgeCollectiona":{"name":"VertexEdgeCollection","abstract":"<p>The collection of all edges whose origin is a given vertex.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV18ParallelProjectiona":{"name":"ParallelProjection","abstract":"<p>The parallel projection of <code>self</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV8_storageSayAA01_de1_C9PerVertexVyxAA01_de1_cG4EdgeVyq0_q_GGGvp":{"name":"_storage","abstract":"<p>The graph&rsquo;s storage!</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListVACyxq_q0_Gycfc":{"name":"init()","abstract":"<p>Initialize an empty BidirectionalAdjacencyList.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV8verticesSnyq0_Gvp":{"name":"vertices","abstract":"<p>All <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV8VertexIda\">VertexId</a></code>&lsquo;s in <code>self</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV5edges4fromAA01_dE29_DirectedVertexEdgeCollectionVyAA01_de1_c3PerJ0Vyq0_q_GGq0__tF":{"name":"edges(from:)","abstract":"<p>All edges originating from <code>vertex</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV9outDegree2ofSiq0__tF":{"name":"outDegree(of:)","abstract":"<p>The number of edges originating from <code>vertex</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV6vertexxq0__tcip":{"name":"subscript(vertex:)","abstract":"<p>Accesses the arbitrary data associated with <code>vertex</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV4edgeq_AA01_dE15_DirectedEdgeIdVyq0_G_tcip":{"name":"subscript(edge:)","abstract":"<p>Accesses the arbitrary data associated with <code>edge</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV10removeEdge4from2toSbq0__q0_tF":{"name":"removeEdge(from:to:)","abstract":"<p>Removes all edges from <code>u</code> to <code>v</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV6removeyyAA01_dE15_DirectedEdgeIdVyq0_GF":{"name":"remove(_:)","abstract":"<p>Removes <code>edge</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV11removeEdges5whereySbAA01_dE15_DirectedEdgeIdVyq0_G_ACyxq_q0_GtXE_tF":{"name":"removeEdges(where:)","abstract":"<p>Removes all edges that <code>shouldBeRemoved</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV11removeEdges4from5whereyq0__SbAA01_dE15_DirectedEdgeIdVyq0_G_ACyxq_q0_GtXEtF":{"name":"removeEdges(from:where:)","abstract":"<p>Remove all out edges of <code>vertex</code> that satisfy the given predicate.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV5clear6vertexyq0__tF":{"name":"clear(vertex:)","abstract":"<p>Removes all edges from <code>vertex</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV6removeyyq0_F":{"name":"remove(_:)","abstract":"<p>Removes <code>vertex</code> from the graph.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV9addVertex7storingq0_x_tF":{"name":"addVertex(storing:)","abstract":"<p>Adds a new vertex with associated <code>vertexProperty</code>, returning its identifier.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV7addEdge4from2to7storingAA01_de9_DirectedG2IdVyq0_Gq0__q0_q_tF":{"name":"addEdge(from:to:storing:)","abstract":"<p>Adds a new edge from <code>source</code> to <code>destination</code> and associated <code>edgeProperty</code>, returning its","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV22VertexInEdgeCollectiona":{"name":"VertexInEdgeCollection","abstract":"<p>The collection of all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV6EdgeIda\">EdgeId</a></code>&lsquo;s whose destination is a given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV8VertexIda\">VertexId</a></code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV5edges2toSayAA01_dE15_DirectedEdgeIdVyq0_GGq0__tF":{"name":"edges(to:)","abstract":"<p>Returns the collection of all edges whose destination is <code>vertex</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/BidirectionalAdjacencyList.html#/s:13PenguinGraphs26BidirectionalAdjacencyListV8inDegree2ofSiq0__tF":{"name":"inDegree(of:)","abstract":"<p>Returns the number of edges whose destination is <code>vertex</code>.</p>","parent_name":"BidirectionalAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV8VertexIda":{"name":"VertexId","abstract":"<p>Undocumented</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV6EdgeIda":{"name":"EdgeId","abstract":"<p>Undocumented</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV16VertexCollectiona":{"name":"VertexCollection","abstract":"<p>Undocumented</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV9_EdgeDataa":{"name":"_EdgeData","abstract":"<p>Undocumented</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV11_VertexDataa":{"name":"_VertexData","abstract":"<p>Undocumented</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV20VertexEdgeCollectiona":{"name":"VertexEdgeCollection","abstract":"<p>Undocumented</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV14EdgeCollectiona":{"name":"EdgeCollection","abstract":"<p>The collection of all edges in <code>self</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV18ParallelProjectiona":{"name":"ParallelProjection","abstract":"<p>A parallel representation of <code>self</code> that can be used in parallel algorithms.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV8_storageXevp":{"name":"_storage","abstract":"<p>Undocumented</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListVACyxq_q0_Gycfc":{"name":"init()","abstract":"<p>Initialize an empty AdjacencyList.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV8verticesXevp":{"name":"vertices","abstract":"<p>All vertex identifiers.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV5edgesyXeq0__tcACyxq_q0_Gr1_lF":{"name":"edges(from:)","abstract":"<p>All edges originating from <code>vertex</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV9outDegree2ofSiq0__tF":{"name":"outDegree(of:)","abstract":"<p>The number of edges originating from <code>vertex</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV15DefaultColorMapa":{"name":"DefaultColorMap","abstract":"<p>A reasonable color map implementation.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV19makeDefaultColorMap9repeatingAA013TablePropertyI0VyACyxq_q0_Gq0_AA06VertexH0OGAJ_tF":{"name":"makeDefaultColorMap(repeating:)","abstract":"<p>Makes a default color map where every vertex is set to <code>color</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV6vertexxq0__tcip":{"name":"subscript(vertex:)","abstract":"<p>Accesses the arbitrary data associated with <code>vertex</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV4edgeq_Xe_tcr1_luip":{"name":"subscript(edge:)","abstract":"<p>Accesses the arbitrary data associated with <code>edge</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV10removeEdge4from2toSbq0__q0_tF":{"name":"removeEdge(from:to:)","abstract":"<p>Removes all edges from <code>u</code> to <code>v</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV6removeyyXecACyxq_q0_Gzr1_lF":{"name":"remove(_:)","abstract":"<p>Removes <code>edge</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV11removeEdgesyyXe_tcACyxq_q0_Gzr1_lF":{"name":"removeEdges(where:)","abstract":"<p>Removes all edges that <code>shouldBeRemoved</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV11removeEdgesyyq0__XetcACyxq_q0_Gzr1_lF":{"name":"removeEdges(from:where:)","abstract":"<p>Remove all out edges of <code>vertex</code> that satisfy the given predicate.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV5clear6vertexyq0__tF":{"name":"clear(vertex:)","abstract":"<p>Removes all edges from <code>vertex</code>.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV6removeyyq0_F":{"name":"remove(_:)","abstract":"<p>Removes <code>vertex</code> from the graph.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV9addVertex7storingq0_x_tF":{"name":"addVertex(storing:)","abstract":"<p>Adds a new vertex with associated <code>vertexProperty</code>, returning its identifier.</p>","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html#/s:13PenguinGraphs21DirectedAdjacencyListV7addEdgeyXeq0__q0_q_tcACyxq_q0_Gzr1_lF":{"name":"addEdge(from:to:storing:)","abstract":"<p>Adds a new edge from <code>source</code> to <code>destination</code> and associated <code>edgeProperty</code>, returning its","parent_name":"DirectedAdjacencyList"},"Structs/DirectedAdjacencyList.html":{"name":"DirectedAdjacencyList","abstract":"<p>A general purpose directed <a href=\"https://en.wikipedia.org/wiki/Adjacency_list\">adjacency list</a> graph.</p>"},"Structs/BidirectionalAdjacencyList.html":{"name":"BidirectionalAdjacencyList","abstract":"<p>A general purpose, bidirectional <a href=\"https://en.wikipedia.org/wiki/Adjacency_list\">adjacency list</a>"},"Structs/UndirectedAdjacencyList.html":{"name":"UndirectedAdjacencyList","abstract":"<p>Undocumented</p>"},"Adjacency%20Lists.html#/s:13PenguinGraphs19SimpleAdjacencyLista":{"name":"SimpleAdjacencyList","abstract":"<p>A simple AdjacencyList with no data associated with each vertex or edge, and a maximum of 2^32-1"},"Protocols/MutablePropertyGraph.html#/s:13PenguinGraphs20MutablePropertyGraphP9addVertex7storing0G2IdQz0G0Qz_tF":{"name":"addVertex(storing:)","abstract":"<p>Adds a vertex to the graph.</p>","parent_name":"MutablePropertyGraph"},"Protocols/MutablePropertyGraph.html#/s:13PenguinGraphs20MutablePropertyGraphP7addEdge4from2to7storing0G2IdQz06VertexK0Qz_AK0G0QztF":{"name":"addEdge(from:to:storing:)","abstract":"<p>Adds an edge to the graph.</p>","parent_name":"MutablePropertyGraph"},"Protocols/MutablePropertyGraph.html#/s:13PenguinGraphs20MutablePropertyGraphPAAE9addVertex0G2IdQzyF":{"name":"addVertex()","abstract":"<p>Adds a new vertex to the graph, with a default initialized <code>Vertex</code>.</p>","parent_name":"MutablePropertyGraph"},"Protocols/MutablePropertyGraph.html#/s:13PenguinGraphs20MutablePropertyGraphPAAE7addEdge4from2to0G2IdQz06VertexJ0Qz_AJtF":{"name":"addEdge(from:to:)","abstract":"<p>Adds an edge from <code>source</code> to <code>destination</code> with a default initialized <code>Edge</code>.</p>","parent_name":"MutablePropertyGraph"},"Protocols/PropertyGraph.html#/s:13PenguinGraphs13PropertyGraphP6VertexQa":{"name":"Vertex","abstract":"<p>The extra information associated with each vertex.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:13PenguinGraphs13PropertyGraphP4EdgeQa":{"name":"Edge","abstract":"<p>The extra information associated with each edge.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:13PenguinGraphs13PropertyGraphP6vertex6VertexQz0F2IdQz_tcip":{"name":"subscript(vertex:)","abstract":"<p>Access information associated with a given <code>VertexId</code>.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:13PenguinGraphs13PropertyGraphP4edge4EdgeQz0F2IdQz_tcip":{"name":"subscript(edge:)","abstract":"<p>Access information associated with a given <code>EdgeId</code>.</p>","parent_name":"PropertyGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP7addEdge4from2to0F2IdQz06VertexI0Qz_AJtF":{"name":"addEdge(from:to:)","abstract":"<p>Adds an edge from <code>source</code> to <code>destination</code> into the graph.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP10removeEdge4from2toSb8VertexIdQz_AHtF":{"name":"removeEdge(from:to:)","abstract":"<p>Removes the edge (u, v) if present in <code>self</code>.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP6removeyy6EdgeIdQzF":{"name":"remove(_:)","abstract":"<p>Removes the edge <code>edge</code> from the graph.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP11removeEdges5whereySb6EdgeIdQz_xtXE_tF":{"name":"removeEdges(where:)","abstract":"<p>Removes all edges identified by <code>shouldBeRemoved</code>.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP11removeEdges4from5wherey8VertexIdQz_Sb04EdgeJ0Qz_xtXEtF":{"name":"removeEdges(from:where:)","abstract":"<p>Removes all out edges from <code>vertex</code> identified by <code>shouldBeRemoved</code>.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP9addVertex0F2IdQzyF":{"name":"addVertex()","abstract":"<p>Adds a new vertex, returning its identifier.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP5clear6vertexy8VertexIdQz_tF":{"name":"clear(vertex:)","abstract":"<p>Removes all edges from <code>vertex</code>.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:13PenguinGraphs12MutableGraphP6removeyy8VertexIdQzF":{"name":"remove(_:)","abstract":"<p>Removes <code>vertex</code> from the graph.</p>","parent_name":"MutableGraph"},"Protocols/EdgeListGraph.html#/s:13PenguinGraphs13EdgeListGraphP0C10CollectionQa":{"name":"EdgeCollection","abstract":"<p>The collection of all edge identifiers.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:13PenguinGraphs13EdgeListGraphP9edgeCountSivp":{"name":"edgeCount","abstract":"<p>The total number of edges within the graph.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:13PenguinGraphs13EdgeListGraphP5edges0C10CollectionQzvp":{"name":"edges","abstract":"<p>A collection of edges.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:13PenguinGraphs13EdgeListGraphP6source2of8VertexIdQz0cI0Qz_tF":{"name":"source(of:)","abstract":"<p>Returns the source vertex of <code>edge</code>.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:13PenguinGraphs13EdgeListGraphP11destination2of8VertexIdQz0cI0Qz_tF":{"name":"destination(of:)","abstract":"<p>Returns the destination vertex of <code>edge</code>.</p>","parent_name":"EdgeListGraph"},"Protocols/VertexListGraph.html#/s:13PenguinGraphs15VertexListGraphP0C10CollectionQa":{"name":"VertexCollection","abstract":"<p>The collection of all vertices.</p>","parent_name":"VertexListGraph"},"Protocols/VertexListGraph.html#/s:13PenguinGraphs15VertexListGraphP11vertexCountSivp":{"name":"vertexCount","abstract":"<p>The total number of vertices in the graph.</p>","parent_name":"VertexListGraph"},"Protocols/VertexListGraph.html#/s:13PenguinGraphs15VertexListGraphP8vertices0C10CollectionQzvp":{"name":"vertices","abstract":"<p>All of the graph&rsquo;s vertices.</p>","parent_name":"VertexListGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphP22VertexInEdgeCollectionQa":{"name":"VertexInEdgeCollection","abstract":"<p>The collection of edges whose destinations are a given vertex (the &ldquo;in-edges&rdquo;).</p>","parent_name":"BidirectionalGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphP5edges2to22VertexInEdgeCollectionQz0G2IdQz_tF":{"name":"edges(to:)","abstract":"<p>Returns the collection of edges whose destination is <code>vertex</code>.</p>","parent_name":"BidirectionalGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphP8inDegree2ofSi8VertexIdQz_tF":{"name":"inDegree(of:)","abstract":"<p>Returns the number of &ldquo;in-edges&rdquo; of <code>vertex</code>.</p>","parent_name":"BidirectionalGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphP6degree2ofSi8VertexIdQz_tF":{"name":"degree(of:)","abstract":"<p>Returns the number of &ldquo;in-edges&rdquo; plus &ldquo;out-edges&rdquo; of <code>vertex</code> in <code>self</code>.</p>","parent_name":"BidirectionalGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphPAAE29kNNEnhancedHillClimbingSearchySay8VertexIdQz_qd__tGAF_Siqd_0_qd_1_zXeqd__AF_AFxztXEtcxzAaBRz0D0Qyd_1_RszSLRd__SlRd_0_AA11PropertyMapRd_1_7ElementQyd_0_AFRS3KeyQyd_1_ALRSAA0I5ColorO5ValueRtd_1_r_3_lF":{"name":"kNNEnhancedHillClimbingSearch(query:k:seeds:vertexVisitationState:workList:similarityBetween:)","abstract":"<p>Returns the <code>k</code> approximate nearest neighbors of <code>query</code> in <code>self</code>.</p>","parent_name":"BidirectionalGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphPA2A010VertexListD0RzrlE29kNNEnhancedHillClimbingSearch5query1k5seeds17similarityBetweenSay0E2IdAA0D8ProtocolPQz_qd__tGAM_Siqd_0_qd__AM_AMxztXEtSLRd__SlRd_0_7ElementQyd_0_AMRSr0_lF":{"name":"kNNEnhancedHillClimbingSearch(query:k:seeds:similarityBetween:)","abstract":"<p>Returns the <code>k</code> approximate nearest neighbors of <code>query</code> in <code>self</code>.</p>","parent_name":"BidirectionalGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphPA2A07MutableD0RzAA010VertexListD0RzrlE41kNNInsertApproximateKNearestNeighborEdges3for1k3rng12similarities17similarityBetweenSay0F2IdAA0D8ProtocolPQz_qd__tGAO_Siqd_0_zqd_1_zqd__AO_AOxztXEt0D0Qyd_1_RszSLRd__5ValueQyd_1_Rsd__SGRd_0_AA11PropertyMapRd_1_3KeyQyd_1_04EdgeR0ANRtzr1_lF":{"name":"kNNInsertApproximateKNearestNeighborEdges(for:k:rng:similarities:similarityBetween:)","abstract":"<p>Adds <code>k</code> edges to <code>vertex</code> corresponding to approximately the <code>k</code> nearest neighbors in <code>self</code>","parent_name":"BidirectionalGraph"},"Protocols/BidirectionalGraph.html#/s:13PenguinGraphs18BidirectionalGraphPA2A07MutableD0RzAA010VertexListD0RzrlE41kNNInsertApproximateKNearestNeighborEdges3for1k12similarities17similarityBetweenSay0F2IdAA0D8ProtocolPQz_qd__tGAN_Siqd_0_zqd__AN_ANxztXEt0D0Qyd_0_RszSLRd__5ValueQyd_0_Rsd__AA11PropertyMapRd_0_3KeyQyd_0_04EdgeQ0AMRtzr0_lF":{"name":"kNNInsertApproximateKNearestNeighborEdges(for:k:similarities:similarityBetween:)","abstract":"<p>Adds <code>k</code> edges to <code>vertex</code> corresponding to approximately the <code>k</code> nearest neighbors in <code>self</code>","parent_name":"BidirectionalGraph"},"Protocols/SearchDefaultsGraph.html#/s:13PenguinGraphs19SearchDefaultsGraphP15DefaultColorMapQa":{"name":"DefaultColorMap","abstract":"<p>A reasonable choice for a data structure to use when keeping track of visitation state during","parent_name":"SearchDefaultsGraph"},"Protocols/SearchDefaultsGraph.html#/s:13PenguinGraphs19SearchDefaultsGraphP19makeDefaultColorMap9repeating0ghI0QzAA06VertexH0O_tF":{"name":"makeDefaultColorMap(repeating:)","abstract":"<p>Creates an instance of the default color map where every vertex is set to <code>color</code>.</p>","parent_name":"SearchDefaultsGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphP20VertexEdgeCollectionQa":{"name":"VertexEdgeCollection","abstract":"<p>The collection of edges originating from a given vertex.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphP5edges4from20VertexEdgeCollectionQz0G2IdQz_tF":{"name":"edges(from:)","abstract":"<p>Returns the collection of edges whose source is <code>vertex</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphP6source2of8VertexIdQz04EdgeH0Qz_tF":{"name":"source(of:)","abstract":"<p>Returns the source <code>VertexId</code> of <code>edge</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphP11destination2of8VertexIdQz04EdgeH0Qz_tF":{"name":"destination(of:)","abstract":"<p>Returns the source <code>VertexId</code> of <code>edge</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphP9outDegree2ofSi8VertexIdQz_tF":{"name":"outDegree(of:)","abstract":"<p>Returns the number of edges whose source is <code>vertex</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE11BFSCallbacka":{"name":"BFSCallback","abstract":"<p>A hook to observe events that occur during depth first search.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE23BFSCallbackWithWorkLista":{"name":"BFSCallbackWithWorkList","abstract":"<p>A hook to (1) observe events that occur during depth first search, and (2) to optionally","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE18breadthFirstSearch10startingAt8workList21vertexVisitationState8callbackyqd_1__qd_0_zqd__zyAA8BFSEventOyxG_xzqd_0_ztKXEtK0D0Qyd__RszAA11PropertyMapRd__SlRd_1_3KeyQyd__8VertexIdRtz7ElementQyd_1_APRSAA0T5ColorO5ValueRtd__r1_lF":{"name":"breadthFirstSearch(startingAt:workList:vertexVisitationState:callback:)","abstract":"<p>Runs breadth first search on <code>self</code> using <code>vertexVisitationState</code> to keep track of search","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE18breadthFirstSearch10startingAt21vertexVisitationState8callbackyqd___qd_0_zyAA8BFSEventOyxG_xztKXEtK0D0Qyd_0_RszSlRd__AA11PropertyMapRd_0_7ElementQyd__8VertexIdRtz3KeyQyd_0_AORSAA0R5ColorO5ValueRtd_0_r0_lF":{"name":"breadthFirstSearch(startingAt:vertexVisitationState:callback:)","abstract":"<p>Runs breadth first search on <code>self</code> starting from <code>startVertices</code>; <code>callback</code> is invoked at","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE11DFSCallbacka":{"name":"DFSCallback","abstract":"<p>A hook to observe events that occur during depth first search.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE16depthFirstSearch10startingAt21vertexVisitationState8callbacky8VertexIdQz_qd__zyAA8DFSEventOyxG_xztKXEtK0D0Qyd__RszAA11PropertyMapRd__3KeyQyd__AIRSAA0N5ColorO5ValueRtd__lF":{"name":"depthFirstSearch(startingAt:vertexVisitationState:callback:)","abstract":"<p>Expores <code>self</code> depth-first starting at <code>source</code>, using <code>vertexVisitationState</code> to keep track of","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE22DijkstraSearchCallbacka":{"name":"DijkstraSearchCallback","abstract":"<p>A hook to observe events that occur during Dijkstra&rsquo;s search.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPAAE14dijkstraSearch10startingAt21vertexVisitationState17distancesToVertex11edgeLengths8workList0qR5Index19effectivelyInfinite8callbacky0N2IdQz_qd_2_zqd_1_zqd_0_qd_3_qd_4_qd__yAA08DijkstraF5EventOyxG_xztKXEtK0D0Qyd_0_Rszs18AdditiveArithmeticRd__SLRd__5ValueQyd_0_Rsd__AA11PropertyMapRd_0_AaWRd_1_AaWRd_2_SMRd_3_SkRd_3_SmRd_3_3KeyQyd_0_04EdgeW0RtzAXQyd_1_ANRSARQyd_1_ASRSAUQyd_1_AVRSARQyd_2_A1_RSAXQyd_2_A0_RSAA0N5ColorOAURtd_2_r4_lF":{"name":"dijkstraSearch(startingAt:vertexVisitationState:distancesToVertex:edgeLengths:workList:workListIndex:effectivelyInfinite:callback:)","abstract":"<p>Executes Dijkstra&rsquo;s graph search algorithm in <code>self</code> using the supplied property maps;","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A07MutableD0RzAA010VertexListD0RzrlE24addKNearestNeighborEdges6vertex1k17similarityBetweenSay6EdgeIdAA0D8ProtocolPQz_qd__tG0fP0ALQz_Siqd__AP_APxztXEtSLRd__lF":{"name":"addKNearestNeighborEdges(vertex:k:similarityBetween:)","abstract":"<p>Adds edges between <code>vertex</code> and its <code>k</code> nearest neighbors, as determined by <code>similarityBetween</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A07MutableD0RzAA010VertexListD0RzrlE24addKNearestNeighborEdges1k17similarityBetweenySi_qd__0F2IdAA0D8ProtocolPQz_ALxztXEtSLRd__lF":{"name":"addKNearestNeighborEdges(k:similarityBetween:)","abstract":"<p>Adds edges between all vertices and their <code>k</code> nearest neighbors, as determined by","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzrlE012breadthFirstE010startingAt8callbackyqd___yAA8BFSEventOyxG_xztKXEtKSlRd__7ElementQyd__8VertexIdRtzlF":{"name":"breadthFirstSearch(startingAt:callback:)","abstract":"<p>Runs breadth first search on <code>self</code> starting from <code>startVertices</code>; <code>callback</code> is invoked at","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzrlE012breadthFirstE010startingAt8callbacky8VertexIdQz_yAA8BFSEventOyxG_xztKXEtKF":{"name":"breadthFirstSearch(startingAt:callback:)","abstract":"<p>Runs breadth first search on <code>self</code> starting from <code>startVertex</code>; <code>callback</code> is invoked at","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzrlE012breadthFirstE010startingAt06endingJ08callbacky8VertexIdQz_AJyAA8BFSEventOyxG_xztKXEtKF":{"name":"breadthFirstSearch(startingAt:endingAt:callback:)","abstract":"<p>Runs breadth first search on <code>self</code> starting from <code>startVertex</code> terminating once <code>endVertex</code>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A010VertexListD0RzrlE19depthFirstTraversal21vertexVisitationState8callbackyqd__z_yAA8DFSEventOyxG_xztKXEtK0D0Qyd__RszAA11PropertyMapRd__3KeyQyd__0E2IdAA0D8ProtocolPRtzAA0E5ColorO5ValueRtd__lF":{"name":"depthFirstTraversal(vertexVisitationState:callback:)","abstract":"<p>Runs depth first search repeatedly until all vertices have been visited.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzrlE010depthFirstE010startingAt8callbacky8VertexIdQz_yAA8DFSEventOyxG_xztKXEtKF":{"name":"depthFirstSearch(startingAt:callback:)","abstract":"<p>Expores <code>self</code> depth-first starting at <code>source</code>, invoking <code>callback</code> at key events during the","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE19depthFirstTraversal8callbackyyAA8DFSEventOyxG_xztKXE_tKF":{"name":"depthFirstTraversal(callback:)","abstract":"<p>Runs depth first search repeatedly until all vertices have been visited.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE08dijkstraE010startingAt11edgeLengths8callbackAA16TablePropertyMapVyx0G2IdAA0D8ProtocolPQzqd__GAO_qd_0_yAA08DijkstraE5EventOyxG_xztKXEtK0D0Qyd_0_RszAA0D15DistanceMeasureRd__5ValueQyd_0_Rsd__AA0pQ0Rd_0_3KeyQyd_0_04EdgeR0ANRtzr0_lF":{"name":"dijkstraSearch(startingAt:edgeLengths:callback:)","abstract":"<p>Returns the distances from <code>startVertex</code> to every other vertex using Dijkstra&rsquo;s search","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE08dijkstraE010startingAt06endingK011edgeLengths8callbackAA16TablePropertyMapVyx0G2IdAA0D8ProtocolPQzqd__GAP_APqd_0_yAA08DijkstraE5EventOyxG_xztKXEtK0D0Qyd_0_RszAA0D15DistanceMeasureRd__5ValueQyd_0_Rsd__AA0qR0Rd_0_3KeyQyd_0_04EdgeS0AORtzr0_lF":{"name":"dijkstraSearch(startingAt:endingAt:edgeLengths:callback:)","abstract":"<p>Returns distances from <code>startVertex</code> in <code>self</code> using <code>edgeLengths</code> starting from <code>startVertex</code>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE20dijkstraShortestPath4from2to11edgeLengths19effectivelyInfinite8callbackSay0G2IdAA0D8ProtocolPQz_qd__tGAO_AOqd_0_qd__yAA08DijkstraE5EventOyxG_xztKXEtK0D0Qyd_0_RszAA0D15DistanceMeasureRd__5ValueQyd_0_Rsd__AA11PropertyMapRd_0_3KeyQyd_0_04EdgeS0ANRtzr0_lF":{"name":"dijkstraShortestPath(from:to:edgeLengths:effectivelyInfinite:callback:)","abstract":"<p>Returns the vertices along the path from <code>startVertex</code> to <code>goalVertex</code> and their distances","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzSH8VertexIdRpzrlE08dijkstraE010startingAt11edgeLengths8callbackAA21DictionaryPropertyMapVyxAFqd__GAF_qd_0_yAA08DijkstraE5EventOyxG_xztKXEtK0D0Qyd_0_RszAA0D15DistanceMeasureRd__5ValueQyd_0_Rsd__AA0pQ0Rd_0_3KeyQyd_0_04EdgeH0Rtzr0_lF":{"name":"dijkstraSearch(startingAt:edgeLengths:callback:)","abstract":"<p>Returns the distances from <code>startVertex</code> to every other vertex using Dijkstra&rsquo;s search","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzSH8VertexIdRpzrlE08dijkstraE010startingAt06endingK011edgeLengths8callbackAA21DictionaryPropertyMapVyxAFqd__GAF_AFqd_0_yAA08DijkstraE5EventOyxG_xztKXEtK0D0Qyd_0_RszAA0D15DistanceMeasureRd__5ValueQyd_0_Rsd__AA0qR0Rd_0_3KeyQyd_0_04EdgeH0Rtzr0_lF":{"name":"dijkstraSearch(startingAt:endingAt:edgeLengths:callback:)","abstract":"<p>Returns distances from <code>startVertex</code> in <code>self</code> using <code>edgeLengths</code> starting from <code>startVertex</code>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzSH8VertexIdRpzrlE20dijkstraShortestPath4from2to11edgeLengths19effectivelyInfinite8callbackSayAF_qd__tGAF_AFqd_0_qd__yAA08DijkstraE5EventOyxG_xztKXEtK0D0Qyd_0_RszAA0D15DistanceMeasureRd__5ValueQyd_0_Rsd__AA11PropertyMapRd_0_3KeyQyd_0_04EdgeH0Rtzr0_lF":{"name":"dijkstraShortestPath(from:to:edgeLengths:effectivelyInfinite:callback:)","abstract":"<p>Returns the vertices along the path from <code>startVertex</code> to <code>goalVertex</code> and their distances","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A010VertexListD0RzSH0E2IdAA0D8ProtocolPRpzrlE16hasParallelEdgesSbvp":{"name":"hasParallelEdges","abstract":"<p><code>true</code> iff there exist at least two edges in <code>self</code> such that both the source and destination","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A010VertexListD0RzrlE11hasSelfEdgeSbvp":{"name":"hasSelfEdge","abstract":"<p><code>true</code> iff there exists at least one edge whose source and destination is the same vertex.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE16strongComponents10components12discoverTime5rootsqd__qd_1_z_qd_2_zqd_3_zt0D0Qyd_1_Rszs17FixedWidthIntegerRd__5ValueQyd_1_Rsd__sALRd_0_AMQyd_2_Rsd_0_AA11PropertyMapRd_1_AaPRd_2_AaPRd_3_3KeyQyd_1_0G2IdAA0D8ProtocolPRtzAJQyd_2_AKRSAQQyd_2_ARRSAJQyd_3_AWRSAQQyd_3_AXRSAMQyd_3_AZRSr3_lF":{"name":"strongComponents(components:discoverTime:roots:)","abstract":"<p>Computes the <a href=\"https://en.wikipedia.org/wiki/Strongly_connected_component\">strongly connected","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE16strongComponents10components5ValueQyd__qd__z_t0D0Qyd__RszAA11PropertyMapRd__3KeyQyd__0G2IdAA0D8ProtocolPRtzs17FixedWidthIntegerAIRQlF":{"name":"strongComponents(components:)","abstract":"<p>Computes the <a href=\"https://en.wikipedia.org/wiki/Strongly_connected_component\">strongly connected","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE16strongComponentsAA16TablePropertyMapVyx0G2IdAA0D8ProtocolPQzSiG10components_Si14componentCounttyF":{"name":"strongComponents()","abstract":"<p>Computes the <a href=\"https://en.wikipedia.org/wiki/Strongly_connected_component\">strongly connected","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE21strongComponentsCountSiyF":{"name":"strongComponentsCount()","abstract":"<p>Computes the number of <a href=\"https://en.wikipedia.org/wiki/Strongly_connected_component\">strongly connected","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE15topologicalSort11reverseSinkyy0G2IdAA0D8ProtocolPQzXE_tKF":{"name":"topologicalSort(reverseSink:)","abstract":"<p>Computes a <a href=\"https://en.wikipedia.org/wiki/Topological_sorting\">topological sort</a> of <code>self</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:13PenguinGraphs14IncidenceGraphPA2A014SearchDefaultsD0RzAA010VertexListD0RzrlE15topologicalSortSay0G2IdAA0D8ProtocolPQzGyKF":{"name":"topologicalSort()","abstract":"<p>Computes a <a href=\"https://en.wikipedia.org/wiki/Topological_sorting\">topological sort</a> of <code>self</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/GraphProtocol.html#/s:13PenguinGraphs13GraphProtocolP8VertexIdQa":{"name":"VertexId","abstract":"<p>A handle to refer to a vertex in the graph.</p>","parent_name":"GraphProtocol"},"Protocols/GraphProtocol.html#/s:13PenguinGraphs13GraphProtocolP6EdgeIdQa":{"name":"EdgeId","abstract":"<p>A handle to rever to an edge in the graph.</p>","parent_name":"GraphProtocol"},"Protocols/GraphProtocol.html":{"name":"GraphProtocol","abstract":"<p>Represents a Graph data structure.</p>"},"Protocols/IncidenceGraph.html":{"name":"IncidenceGraph","abstract":"<p>A graph that allows retrieval of edges from each vertex.</p>"},"Protocols/SearchDefaultsGraph.html":{"name":"SearchDefaultsGraph","abstract":"<p>A graph that provides defaults for graph searching algorithms.</p>"},"Protocols/BidirectionalGraph.html":{"name":"BidirectionalGraph","abstract":"<p>A graph that allows retrieval of edges incoming to each vertex (the &ldquo;in-edges&rdquo;).</p>"},"Protocols/VertexListGraph.html":{"name":"VertexListGraph","abstract":"<p>A <code>VertexListGraph</code> is a graph that can enumerate all the vertices within it.</p>"},"Protocols/EdgeListGraph.html":{"name":"EdgeListGraph","abstract":"<p>An <code>EdgeListGraph</code> is a graph that can enumerate all edges within it.</p>"},"Protocols/MutableGraph.html":{"name":"MutableGraph","abstract":"<p>A <code>MutableGraph</code> can be changed via the addition and removal of edges and vertices.</p>"},"Protocols/PropertyGraph.html":{"name":"PropertyGraph","abstract":"<p>A <code>PropertyGraph</code> stores additional information along with the graph structure.</p>"},"Protocols/MutablePropertyGraph.html":{"name":"MutablePropertyGraph","abstract":"<p>A <code>MutablePropertyGraph</code> keeps track of additional metadata for each vertex and edge.</p>"},"Graph%20Protocols%20%26%20Algorithms.html":{"name":"Graph Protocols & Algorithms"},"Adjacency%20Lists.html":{"name":"Adjacency Lists"},"Graph%20Algorithm%20State.html":{"name":"Graph Algorithm State"},"Parallel%20Graph%20Algorithms.html":{"name":"Parallel Graph Algorithms"},"Graph%20Property%20Maps.html":{"name":"Graph Property Maps"},"Other%20graph%20types.html":{"name":"Other graph types"},"Adjacency%20List%20Implementation%20Internals.html":{"name":"Adjacency List Implementation Internals"},"Infinite%20Grid%20Support.html":{"name":"Infinite Grid Support"},"Other%20Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"}}